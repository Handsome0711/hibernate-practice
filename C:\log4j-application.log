2020-05-22 09:37:11 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 09:37:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 09:37:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 09:37:11 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 09:37:11 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 09:37:11 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 09:37:12 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 09:37:12 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 09:37:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 09:37:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 09:37:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 09:37:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 09:37:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 09:37:13 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6187d1f5
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@6187d1f5
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6187d1f5
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2a448449
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e8df99a
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@64b73e7a
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@45fd9a4d
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@45fd9a4d
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@45fd9a4d
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@16c63f5
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@16c63f5
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16c63f5
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@74eb909f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@74eb909f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74eb909f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@13d9b21f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@13d9b21f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@13d9b21f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@687ef2e0
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@687ef2e0
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@687ef2e0
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@497486b3
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@497486b3
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@497486b3
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@635572a7
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@635572a7
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@635572a7
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@222eb8aa
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@222eb8aa
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a76840c
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a76840c
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2fc6f97f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2fc6f97f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2d6764b2
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@79351f41
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1e0f9063
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e0f9063
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@3ed242a4
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3ed242a4
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@6b8d96d9
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b8d96d9
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fe1ce85
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5fe1ce85
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@52851b44
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@52851b44
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@23aa363a
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@23aa363a
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e8ce150
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e8ce150
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@363042d7
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@363042d7
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1477089c
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1477089c
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@305a0c5f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@305a0c5f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@42721fe
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@42721fe
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6d23017e
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6d23017e
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6d23017e
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a3e78f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@56113384
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56113384
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56113384
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@189aa67a
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@31d0e481
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31d0e481
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@3bcbb589
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3bcbb589
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5aac4250
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5aac4250
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@67c2e933
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67c2e933
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ebf0f36
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ebf0f36
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6492fab5
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@2002348
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2002348
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@2002348
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@47f4e407
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@47f4e407
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@47f4e407
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@57ea113a
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@2ceb80a1
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@45815ffc
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@45815ffc
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@45815ffc
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@158a3b2e
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@158a3b2e
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@158a3b2e
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@2f17e30d
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@615091b8
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@70ab2d48
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@70ab2d48
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@13518f37
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@753432a2
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@753432a2
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@42f8285e
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@42f8285e
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b53bcc2
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@424ebba3
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7e7b159b
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@5cdd09b1
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5cdd09b1
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5cbe877d
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bff64c2
2020-05-22 09:37:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 09:37:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 09:37:13 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 09:37:13 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 09:37:13 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 09:37:13 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 09:37:13 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 09:37:13 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 09:37:15 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 09:37:15 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 09:37:15 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 09:37:15 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 09:37:15 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 09:37:15 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 09:37:15 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 09:37:15 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1450078a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@c68a5f8]
2020-05-22 09:37:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 09:37:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 09:37:15 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 09:37:15 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 09:37:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 09:37:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 09:37:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 09:37:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 09:37:15 DEBUG PropertyBinder:266 - Building property id
2020-05-22 09:37:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 09:37:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 09:37:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 09:37:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 09:37:15 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 09:37:15 DEBUG PropertyBinder:266 - Building property name
2020-05-22 09:37:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 09:37:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 09:37:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 09:37:15 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 09:37:15 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 09:37:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 09:37:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 09:37:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 09:37:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 09:37:16 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 09:37:16 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 09:37:16 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 09:37:16 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 09:37:16 DEBUG Settings:72 - Statistics: disabled
2020-05-22 09:37:16 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 09:37:16 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 09:37:16 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 09:37:16 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 09:37:16 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 09:37:16 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 09:37:16 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 09:37:16 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 09:37:16 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 09:37:16 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 09:37:16 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 09:37:16 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 09:37:16 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 09:37:16 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 09:37:16 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 09:37:16 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 09:37:16 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 09:37:16 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 09:37:16 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 09:37:16 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 09:37:16 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 09:37:16 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 09:37:16 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 09:37:16 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 09:37:16 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 09:37:16 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 09:37:16 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 09:37:16 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 09:37:16 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 09:37:16 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 09:37:16 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 09:37:16 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 09:37:16 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 09:37:16 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 09:37:16 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1a480135, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 09:37:16 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 09:37:16 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 09:37:16 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1450078a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@100c567f]
2020-05-22 09:37:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 09:37:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 09:37:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 09:37:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 09:37:18 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 09:37:18 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 09:37:18 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 09:37:18 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 09:37:18 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 09:37:18 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 09:37:18 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 09:37:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c2584d3]
2020-05-22 09:37:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:37:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 09:37:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:37:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:37:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 09:37:18 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:37:18 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@348ad293]
2020-05-22 09:37:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:37:18 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 09:37:18 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:37:18 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:37:18 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 09:37:18 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:37:18 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:37:18 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:37:18 DEBUG SQL:127 - drop table if exists author
2020-05-22 09:37:18 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@54d1608f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 09:37:18 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 09:37:18 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1806bc4c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 09:37:18 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 09:37:18 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 09:37:18 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 09:37:18 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 09:37:18 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 09:37:18 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 09:37:18 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1b5a1d85
2020-05-22 09:37:18 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: e7d60d58-5e5b-4458-9600-1249703feb5b (<unnamed>)
2020-05-22 09:37:18 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 09:37:18 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 09:37:18 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 09:37:18 DEBUG TransactionImpl:81 - begin
2020-05-22 09:37:18 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 09:37:18 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 09:37:18 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 09:37:18 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 09:37:18 DEBUG TransactionImpl:98 - committing
2020-05-22 09:37:18 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 09:37:18 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 09:37:18 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 09:37:18 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 09:37:18 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 09:37:18 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 09:37:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:37:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:44:53 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 09:44:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 09:44:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 09:44:53 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 09:44:53 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 09:44:53 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 09:44:53 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 09:44:54 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 09:44:54 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 09:44:54 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 09:44:54 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 09:44:54 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 09:44:54 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 09:44:54 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43f82e78
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2f40e5db
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2df6226d
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1852a3ff
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1852a3ff
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eda25e5
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eda25e5
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6179e425
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6179e425
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49c6c24f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6399551e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@7642df8f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7642df8f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@614df0a4
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@614df0a4
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@758705fa
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@758705fa
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37091312
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37091312
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5d8bafa9
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5d8bafa9
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@55dfebeb
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@55dfebeb
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d3ac898
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d3ac898
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ad59d92
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ad59d92
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63dd899
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63dd899
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1ecee32c
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ecee32c
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1f6c9cd8
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1f6c9cd8
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17a1e4ca
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@362045c0
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@241e8ea6
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@241e8ea6
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@3016fd5e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3016fd5e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@42463763
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@42463763
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@613a8ee1
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@613a8ee1
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2807bdeb
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2807bdeb
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39a8312f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@674bd420
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@7216fb24
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@1d131e1b
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@4aa83f4f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@6f152006
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6f152006
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a6f2de3
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4983159f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4983159f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@3724af13
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3724af13
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a43ce46
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2320fa6f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@60957c0f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7e8dcdaa
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e8dcdaa
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4bff64c2
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-22 09:44:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 09:44:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 09:44:54 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 09:44:54 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 09:44:54 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 09:44:54 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 09:44:54 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 09:44:54 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 09:44:54 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 09:44:54 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 09:44:54 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 09:44:54 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 09:44:54 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 09:44:54 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 09:44:54 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 09:44:54 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@796d3c9f]
2020-05-22 09:44:54 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 09:44:54 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 09:44:54 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 09:44:54 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 09:44:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 09:44:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 09:44:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 09:44:54 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 09:44:54 DEBUG PropertyBinder:266 - Building property id
2020-05-22 09:44:54 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 09:44:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 09:44:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 09:44:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 09:44:54 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 09:44:54 DEBUG PropertyBinder:266 - Building property name
2020-05-22 09:44:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 09:44:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 09:44:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 09:44:54 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 09:44:54 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 09:44:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 09:44:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 09:44:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 09:44:54 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 09:44:54 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 09:44:54 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 09:44:54 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 09:44:54 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 09:44:54 DEBUG Settings:72 - Statistics: disabled
2020-05-22 09:44:54 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 09:44:54 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 09:44:54 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 09:44:54 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 09:44:54 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 09:44:54 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 09:44:54 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 09:44:54 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 09:44:54 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 09:44:54 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 09:44:54 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 09:44:54 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 09:44:54 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 09:44:54 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 09:44:54 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 09:44:54 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 09:44:54 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 09:44:54 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 09:44:54 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 09:44:54 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 09:44:54 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 09:44:54 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 09:44:54 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 09:44:54 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 09:44:54 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 09:44:54 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 09:44:54 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 09:44:54 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 09:44:54 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 09:44:54 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 09:44:54 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 09:44:54 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 09:44:54 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 09:44:54 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 09:44:54 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6145b81e, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 09:44:54 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 09:44:54 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 09:44:54 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6a282fdd]
2020-05-22 09:44:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 09:44:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 09:44:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 09:44:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 09:44:55 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 09:44:55 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 09:44:55 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 09:44:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 09:44:55 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 09:44:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 09:44:55 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 09:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f53481b]
2020-05-22 09:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 09:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 09:44:55 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:44:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6920b0bc]
2020-05-22 09:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:44:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 09:44:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:44:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:44:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 09:44:55 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:44:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:44:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:44:55 DEBUG SQL:127 - drop table if exists author
2020-05-22 09:44:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1c9fbb61] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 09:44:55 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 09:44:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7593ea79] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 09:44:55 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 09:44:55 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 09:44:55 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 09:44:55 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 09:44:55 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 09:44:55 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 09:44:55 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1b6924cb
2020-05-22 09:44:55 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0d2eddb2-2cb1-4f6e-a20f-f84de5f6ca6a (<unnamed>)
2020-05-22 09:44:55 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 09:44:55 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 09:44:55 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 09:44:55 DEBUG TransactionImpl:81 - begin
2020-05-22 09:44:55 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 09:44:55 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 09:44:55 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 09:44:55 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 09:44:55 DEBUG TransactionImpl:98 - committing
2020-05-22 09:44:55 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 09:44:55 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 09:44:55 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 09:44:55 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 09:44:55 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 09:44:55 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 09:44:55 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:44:55 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:45:13 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 09:45:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 09:45:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 09:45:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 09:45:13 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 09:45:13 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 09:45:13 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 09:45:13 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 09:45:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 09:45:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 09:45:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 09:45:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 09:45:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 09:45:13 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43f82e78
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2f40e5db
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2df6226d
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1852a3ff
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1852a3ff
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eda25e5
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eda25e5
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6179e425
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6179e425
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49c6c24f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6399551e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@7642df8f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7642df8f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@614df0a4
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@614df0a4
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@758705fa
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@758705fa
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37091312
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37091312
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5d8bafa9
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5d8bafa9
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@55dfebeb
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@55dfebeb
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d3ac898
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d3ac898
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ad59d92
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ad59d92
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63dd899
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63dd899
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1ecee32c
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ecee32c
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1f6c9cd8
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1f6c9cd8
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17a1e4ca
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@362045c0
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@241e8ea6
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@241e8ea6
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@3016fd5e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3016fd5e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@42463763
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@42463763
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@613a8ee1
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@613a8ee1
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2807bdeb
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2807bdeb
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39a8312f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@674bd420
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@7216fb24
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@1d131e1b
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@4aa83f4f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@6f152006
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6f152006
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a6f2de3
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4983159f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4983159f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@3724af13
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3724af13
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a43ce46
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2320fa6f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@60957c0f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7e8dcdaa
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e8dcdaa
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4bff64c2
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-22 09:45:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 09:45:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 09:45:14 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 09:45:14 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 09:45:14 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 09:45:14 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 09:45:14 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 09:45:14 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 09:45:14 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 09:45:14 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 09:45:14 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 09:45:14 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 09:45:14 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 09:45:14 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 09:45:14 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 09:45:14 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@757529a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@779de014]
2020-05-22 09:45:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 09:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 09:45:14 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 09:45:14 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 09:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 09:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 09:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 09:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 09:45:14 DEBUG PropertyBinder:266 - Building property id
2020-05-22 09:45:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 09:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 09:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 09:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 09:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 09:45:14 DEBUG PropertyBinder:266 - Building property name
2020-05-22 09:45:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 09:45:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 09:45:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 09:45:14 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 09:45:14 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 09:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 09:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 09:45:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 09:45:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 09:45:14 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 09:45:14 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 09:45:14 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 09:45:14 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 09:45:14 DEBUG Settings:72 - Statistics: disabled
2020-05-22 09:45:14 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 09:45:14 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 09:45:14 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 09:45:14 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 09:45:14 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 09:45:14 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 09:45:14 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 09:45:14 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 09:45:14 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 09:45:14 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 09:45:14 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 09:45:14 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 09:45:14 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 09:45:14 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 09:45:14 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 09:45:14 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 09:45:14 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 09:45:14 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 09:45:14 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 09:45:14 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 09:45:14 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 09:45:14 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 09:45:14 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 09:45:14 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 09:45:14 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 09:45:14 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 09:45:14 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 09:45:14 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 09:45:14 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 09:45:14 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 09:45:14 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 09:45:14 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 09:45:14 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 09:45:14 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 09:45:14 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1de6932a, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 09:45:14 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 09:45:14 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 09:45:14 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@757529a4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1de9d54]
2020-05-22 09:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 09:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 09:45:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 09:45:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 09:45:14 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 09:45:14 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 09:45:14 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 09:45:14 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 09:45:14 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 09:45:14 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 09:45:14 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 09:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33425811]
2020-05-22 09:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 09:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 09:45:14 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:45:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e0ec41f]
2020-05-22 09:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:45:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 09:45:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:45:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:45:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 09:45:14 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:45:14 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:45:14 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:45:14 DEBUG SQL:127 - drop table if exists author
2020-05-22 09:45:14 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7c112f5f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 09:45:14 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 09:45:14 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@37496720] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 09:45:14 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 09:45:14 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 09:45:14 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 09:45:14 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 09:45:14 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 09:45:14 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 09:45:14 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@23a918c7
2020-05-22 09:45:14 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 887b92dc-1907-40dd-b753-2c09109ccfb9 (<unnamed>)
2020-05-22 09:45:14 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 09:45:15 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 09:45:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 09:45:15 DEBUG TransactionImpl:81 - begin
2020-05-22 09:45:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 09:45:15 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 09:45:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 09:45:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 09:45:15 DEBUG TransactionImpl:98 - committing
2020-05-22 09:45:15 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 09:45:15 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 09:45:15 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 09:45:15 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 09:45:15 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 09:45:15 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 09:45:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:45:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:45:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 09:45:15 DEBUG TransactionImpl:81 - begin
2020-05-22 09:45:15 DEBUG TransactionImpl:139 - rolling back
2020-05-22 09:45:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:45:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:45:41 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 09:45:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 09:45:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 09:45:41 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 09:45:41 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 09:45:41 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 09:45:41 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 09:45:41 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 09:45:41 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 09:45:41 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 09:45:41 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 09:45:41 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 09:45:41 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 09:45:41 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7502291e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43f82e78
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2f40e5db
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2df6226d
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@146587a2
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d3c5255
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2eee3069
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@62727399
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3da05287
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75f95314
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4dd02341
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1852a3ff
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1852a3ff
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eda25e5
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eda25e5
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6179e425
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6179e425
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49c6c24f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6399551e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@7642df8f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7642df8f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@614df0a4
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@614df0a4
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@758705fa
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@758705fa
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@37091312
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@37091312
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5d8bafa9
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5d8bafa9
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@55dfebeb
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@55dfebeb
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d3ac898
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1d3ac898
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6ad59d92
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6ad59d92
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63dd899
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63dd899
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1ecee32c
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ecee32c
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1f6c9cd8
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1f6c9cd8
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1817f1eb
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17a1e4ca
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@373ebf74
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@362045c0
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@241e8ea6
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@241e8ea6
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@3016fd5e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3016fd5e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@42463763
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@42463763
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@613a8ee1
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@613a8ee1
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2807bdeb
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2807bdeb
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39a8312f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@31000e60
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48d5f34e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@674bd420
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@7216fb24
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@d3957fe
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5e1fa5b1
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@1d131e1b
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@4aa83f4f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@6f152006
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6f152006
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a6f2de3
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4983159f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4983159f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@3724af13
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3724af13
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a43ce46
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2320fa6f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@60957c0f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7e8dcdaa
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e8dcdaa
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4bff64c2
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-22 09:45:41 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 09:45:41 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 09:45:41 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 09:45:41 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 09:45:41 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 09:45:41 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 09:45:41 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 09:45:41 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 09:45:42 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 09:45:42 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 09:45:42 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 09:45:42 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 09:45:42 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 09:45:42 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 09:45:42 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 09:45:42 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69c6161d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3aefae67]
2020-05-22 09:45:42 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 09:45:42 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 09:45:42 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 09:45:42 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 09:45:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 09:45:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 09:45:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 09:45:42 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 09:45:42 DEBUG PropertyBinder:266 - Building property id
2020-05-22 09:45:42 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 09:45:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 09:45:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 09:45:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 09:45:42 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 09:45:42 DEBUG PropertyBinder:266 - Building property name
2020-05-22 09:45:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 09:45:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 09:45:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 09:45:42 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 09:45:42 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 09:45:42 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 09:45:42 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 09:45:42 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 09:45:42 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 09:45:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 09:45:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 09:45:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 09:45:42 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 09:45:42 DEBUG PropertyBinder:266 - Building property id
2020-05-22 09:45:42 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 09:45:42 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 09:45:42 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 09:45:42 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 09:45:42 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 09:45:42 DEBUG PropertyBinder:266 - Building property name
2020-05-22 09:45:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 09:45:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 09:45:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 09:45:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 09:45:42 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 09:45:42 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 09:45:42 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 09:45:42 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 09:45:42 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 09:45:42 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 09:45:42 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 09:45:42 DEBUG Settings:72 - Statistics: disabled
2020-05-22 09:45:42 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 09:45:42 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 09:45:42 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 09:45:42 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 09:45:42 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 09:45:42 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 09:45:42 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 09:45:42 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 09:45:42 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 09:45:42 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 09:45:42 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 09:45:42 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 09:45:42 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 09:45:42 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 09:45:42 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 09:45:42 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 09:45:42 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 09:45:42 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 09:45:42 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 09:45:42 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 09:45:42 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 09:45:42 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 09:45:42 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 09:45:42 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 09:45:42 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 09:45:42 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 09:45:42 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 09:45:42 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 09:45:42 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 09:45:42 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 09:45:42 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 09:45:42 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 09:45:42 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 09:45:42 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 09:45:42 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@681e144, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 09:45:42 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 09:45:42 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 09:45:42 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69c6161d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6d5037a9]
2020-05-22 09:45:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 09:45:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 09:45:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 09:45:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 09:45:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 09:45:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 09:45:42 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 09:45:42 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_1_ from genre genre_ where genre_.id=?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 09:45:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4364712f]
2020-05-22 09:45:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:45:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:45:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:45:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 09:45:42 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_1_0_, genre0_.name as name2_1_0_ from genre genre0_ where genre0_.id=?
2020-05-22 09:45:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5981f4a6]
2020-05-22 09:45:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:45:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:45:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:45:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2020-05-22 09:45:42 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_1_0_, genre0_.name as name2_1_0_ from genre genre0_ where genre0_.id=?
2020-05-22 09:45:42 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_1_0_, genre0_.name as name2_1_0_ from genre genre0_ where genre0_.id=?
2020-05-22 09:45:42 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_1_0_, genre0_.name as name2_1_0_ from genre genre0_ where genre0_.id=?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 09:45:42 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 09:45:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e35c4]
2020-05-22 09:45:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:45:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 09:45:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:45:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:45:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 09:45:42 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:45:42 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12fe1f28]
2020-05-22 09:45:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 09:45:42 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 09:45:42 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 09:45:42 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 09:45:42 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 09:45:42 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:45:42 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:45:42 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 09:45:42 DEBUG SQL:127 - drop table if exists author
2020-05-22 09:45:42 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6232ffdb] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 09:45:42 DEBUG SQL:127 - drop table if exists genre
2020-05-22 09:45:42 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 09:45:42 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2ae62bb6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 09:45:43 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 09:45:43 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 09:45:43 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 09:45:43 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 09:45:43 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 09:45:43 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 09:45:43 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 09:45:43 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@73809e7
2020-05-22 09:45:43 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 2423bbcd-90ce-412b-b6ea-cb8df87a46b6 (<unnamed>)
2020-05-22 09:45:43 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 09:45:43 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 09:45:43 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 09:45:43 DEBUG TransactionImpl:81 - begin
2020-05-22 09:45:43 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 09:45:43 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 09:45:43 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 09:45:43 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 09:45:43 DEBUG TransactionImpl:98 - committing
2020-05-22 09:45:43 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 09:45:43 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 09:45:43 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 09:45:43 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 09:45:43 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 09:45:43 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 09:45:43 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:45:43 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:45:43 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 09:45:43 DEBUG TransactionImpl:81 - begin
2020-05-22 09:45:43 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 09:45:43 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 09:45:43 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 09:45:43 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 09:45:43 DEBUG TransactionImpl:98 - committing
2020-05-22 09:45:43 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 09:45:43 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 09:45:43 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 09:45:43 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 09:45:43 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 09:45:43 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 09:45:43 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 09:45:43 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:38 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:00:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:00:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:00:38 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:00:38 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:00:38 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:00:38 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:00:38 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:00:38 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:00:38 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:00:38 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:00:38 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:00:38 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:00:38 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@487db668
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@487db668
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@487db668
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@e8df99a
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@64b73e7a
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4ff4357f
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@76884e4b
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@76884e4b
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@76884e4b
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@6986bbaf
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@6986bbaf
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6986bbaf
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@5629510
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@5629510
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5629510
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@130dca52
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@130dca52
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@130dca52
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@115667d
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@115667d
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@115667d
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6bbe2511
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6bbe2511
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6bbe2511
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7a1a3478
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7a1a3478
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a1a3478
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25bfcafd
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25bfcafd
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@623e088f
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@623e088f
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2d6764b2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d6764b2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79351f41
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5023bb8b
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5cde6747
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5cde6747
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@2d96543c
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2d96543c
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@906d29b
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@906d29b
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@57abad67
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@57abad67
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2dca0d64
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2dca0d64
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1cdc4c27
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1cdc4c27
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@628c4ac0
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@628c4ac0
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@62e20a76
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@62e20a76
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@75cd8043
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@75cd8043
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@232a7d73
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@232a7d73
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@66746f57
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@66746f57
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3a3e78f
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3a3e78f
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3a3e78f
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c5dc4a2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@c4ed84
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@c4ed84
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@c4ed84
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5ccbeb64
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@626c44e7
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@626c44e7
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@53d102a2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53d102a2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@61f05988
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61f05988
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@7103cb56
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7103cb56
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6492fab5
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6492fab5
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2c532cd8
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@24d09c1
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@24d09c1
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@24d09c1
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ff65192
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ff65192
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ff65192
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2ceb80a1
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@50ecde95
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@299321e2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@299321e2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@299321e2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2f17e30d
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2f17e30d
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2f17e30d
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@615091b8
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@260e86a1
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@13518f37
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13518f37
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56303b57
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@101639ae
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@101639ae
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@6b53bcc2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b53bcc2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@424ebba3
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4d722ac9
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@fcb4004
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@5cbe877d
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5cbe877d
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bff64c2
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@c2db68f
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:00:38 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:00:38 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:00:38 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:00:38 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:00:38 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:00:38 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:00:38 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:00:38 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:00:39 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:00:39 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:00:39 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:00:39 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:00:39 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:00:39 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:00:39 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:00:39 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41e1455d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e558728]
2020-05-22 10:00:39 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:00:39 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:00:39 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:00:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:00:39 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:00:39 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:00:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:00:39 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:00:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:00:39 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:00:39 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:00:39 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:00:39 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:00:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:00:39 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:00:39 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:00:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:00:39 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:00:39 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:00:39 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:00:39 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:00:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:00:39 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:00:39 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:00:39 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:00:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:00:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:00:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:00:39 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:00:39 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:00:39 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:00:39 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:00:39 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:00:39 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:00:39 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:00:39 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:00:39 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:00:39 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:00:39 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:00:39 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:00:39 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:00:39 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 10:00:39 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 10:00:39 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:00:39 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:00:39 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:00:39 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:00:39 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:00:39 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:00:39 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:00:39 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:00:39 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:00:39 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:00:39 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:00:39 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:00:39 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:00:39 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:00:39 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:00:39 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:00:39 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:00:39 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:00:39 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:00:39 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:00:39 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:00:39 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:00:39 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:00:39 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:00:39 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:00:39 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:00:39 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:00:39 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:00:39 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:00:39 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:00:39 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:00:39 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:00:39 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:00:39 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:00:39 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:00:39 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:00:39 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:00:39 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:00:39 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:00:39 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:00:39 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:00:39 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:00:39 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:00:39 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:00:39 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:00:39 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62891fc8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:00:39 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:00:39 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:00:39 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41e1455d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ec65b5e]
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:00:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:00:39 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:00:39 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:00:39 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 10:00:39 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 10:00:39 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fb8c87]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:00:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:00:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:00:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:00:39 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39909d1a]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:00:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:00:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:00:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:00:39 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:00:39 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:00:39 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18371d89]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:00:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:00:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:00:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:00:39 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4832f03b]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:00:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:00:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:00:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:00:39 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:00:39 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:00:39 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:00:39 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8816cc]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ebe4ccc]
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d3c6593]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cbe7d4d]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:00:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:00:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:00:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2020-05-22 10:00:39 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, genre1_.id as id1_3_1_, genre1_.name as name2_3_1_ from book book0_ left outer join genre genre1_ on book0_.genre_id=genre1_.id where book0_.id=?
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5a1d85]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54755dd9]
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f1f7db2]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4462efe1]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:00:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:00:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:00:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2020-05-22 10:00:39 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, genre1_.id as id1_3_1_, genre1_.name as name2_3_1_ from book book0_ left outer join genre genre1_ on book0_.genre_id=genre1_.id where book0_.id=?
2020-05-22 10:00:39 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:00:39 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44fff386]
2020-05-22 10:00:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc713c9]
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:00:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:00:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:00:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:00:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:00:39 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:00:39 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:00:39 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2740e316] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:00:39 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:00:39 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 10:00:39 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:00:39 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:00:39 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14fded9d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:00:40 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:00:40 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 10:00:40 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:00:40 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 10:00:40 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:00:40 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 10:00:40 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 10:00:40 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:00:40 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:00:40 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:00:40 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:00:40 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:00:40 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:00:40 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4364863
2020-05-22 10:00:40 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 4f00e0a8-937a-418a-9cce-a4e61839bf92 (<unnamed>)
2020-05-22 10:00:40 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:00:40 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:00:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:00:40 DEBUG TransactionImpl:81 - begin
2020-05-22 10:00:40 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:00:40 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:00:40 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:00:40 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:00:40 DEBUG TransactionImpl:98 - committing
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:00:40 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:00:40 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:00:40 DEBUG TransactionImpl:81 - begin
2020-05-22 10:00:40 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:00:40 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:00:40 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:00:40 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:00:40 DEBUG TransactionImpl:98 - committing
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:00:40 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:00:40 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:00:40 DEBUG TransactionImpl:81 - begin
2020-05-22 10:00:40 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:00:40 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:00:40 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:00:40 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:00:40 DEBUG TransactionImpl:98 - committing
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:00:40 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:00:40 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:00:40 DEBUG TransactionImpl:81 - begin
2020-05-22 10:00:40 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:00:40 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:00:40 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:00:40 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:00:40 DEBUG TransactionImpl:98 - committing
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:00:40 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:00:40 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:00:40 DEBUG TransactionImpl:81 - begin
2020-05-22 10:00:40 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:00:40 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:00:40 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:00:40 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:00:40 DEBUG TransactionImpl:98 - committing
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:00:40 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:00:40 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:00:40 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:00:40 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:00:40 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:00:40 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:00:40 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:00:40 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:08:30 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:08:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:08:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:08:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:08:30 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:08:30 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:08:31 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:08:31 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:08:31 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:08:31 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:08:31 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:08:31 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:08:31 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:08:31 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:08:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:08:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:08:31 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:08:31 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:08:31 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:08:31 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:08:31 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:08:31 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:08:31 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:08:31 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:08:31 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:08:31 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:08:31 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:08:31 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:08:31 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:08:31 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 10:08:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:08:31 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:08:31 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:08:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:08:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:08:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:08:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:08:31 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:08:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:08:31 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:08:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:08:31 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:08:31 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:08:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:08:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:08:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:08:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:08:31 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:08:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:08:31 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:08:31 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:08:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:08:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:08:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:08:31 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:08:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:08:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:08:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:08:31 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:08:31 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:08:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:08:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:08:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:08:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:08:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:08:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:08:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:08:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:08:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:08:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:08:31 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:08:31 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 10:08:31 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 10:08:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:08:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:08:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:08:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:08:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:08:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:08:31 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:08:31 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:08:31 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:08:31 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:08:31 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:08:31 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:08:31 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:08:31 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:08:31 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:08:31 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:08:31 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:08:31 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:08:31 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:08:31 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:08:31 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:08:31 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:08:31 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:08:31 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:08:31 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:08:31 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:08:31 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:08:31 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:08:31 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:08:31 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:08:31 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:08:31 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:08:31 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:08:31 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:08:31 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:08:31 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:08:31 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:08:31 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:08:31 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:08:31 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:08:31 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:08:31 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:08:31 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:08:31 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:08:32 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:08:32 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68217d41, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:08:32 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:08:32 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:08:32 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@470a659f]
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:08:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:08:32 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:08:32 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:08:32 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 10:08:32 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 10:08:32 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f324455]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:08:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:08:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:08:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:08:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554c4eaa]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:08:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:08:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:08:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:08:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:08:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:08:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0ed952]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:08:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:08:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:08:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:08:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d074b14]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:08:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:08:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:08:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:08:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:08:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:08:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:08:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559cedee]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59fbb34]
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@590adb41]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d3c6593]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:08:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:08:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:08:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2020-05-22 10:08:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, genre1_.id as id1_3_1_, genre1_.name as name2_3_1_ from book book0_ left outer join genre genre1_ on book0_.genre_id=genre1_.id where book0_.id=?
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2daf06fc]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ceecfee]
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da31a40]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28ee7bee]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:08:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:08:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:08:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2020-05-22 10:08:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, genre1_.id as id1_3_1_, genre1_.name as name2_3_1_ from book book0_ left outer join genre genre1_ on book0_.genre_id=genre1_.id where book0_.id=?
2020-05-22 10:08:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:08:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51c8f62c]
2020-05-22 10:08:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a374be]
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:08:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:08:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:08:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:08:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:08:32 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:08:32 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:08:32 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3458eca5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:08:32 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:08:32 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 10:08:32 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:08:32 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:08:32 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4548d254] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:08:32 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:08:32 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 10:08:32 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:08:33 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 10:08:33 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:08:33 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 10:08:33 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 10:08:33 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:08:33 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:08:33 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:08:33 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:08:33 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:08:33 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:08:33 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d257579
2020-05-22 10:08:33 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9152f299-5ccb-4a0a-87ab-ec341368ca02 (<unnamed>)
2020-05-22 10:08:33 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:08:33 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:08:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:08:33 DEBUG TransactionImpl:81 - begin
2020-05-22 10:08:33 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:08:33 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:08:33 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:08:33 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:08:33 DEBUG TransactionImpl:98 - committing
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:08:33 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:08:33 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:08:33 DEBUG TransactionImpl:81 - begin
2020-05-22 10:08:33 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:08:33 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:08:33 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:08:33 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:08:33 DEBUG TransactionImpl:98 - committing
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:08:33 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:08:33 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:08:33 DEBUG TransactionImpl:81 - begin
2020-05-22 10:08:33 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:08:33 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:08:33 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:08:33 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:08:33 DEBUG TransactionImpl:98 - committing
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:08:33 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:08:33 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:08:33 DEBUG TransactionImpl:81 - begin
2020-05-22 10:08:33 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:08:33 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:08:33 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:08:33 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:08:33 DEBUG TransactionImpl:98 - committing
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:08:33 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:08:33 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:08:33 DEBUG TransactionImpl:81 - begin
2020-05-22 10:08:33 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:08:33 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:08:33 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:08:33 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:08:33 DEBUG TransactionImpl:98 - committing
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:08:33 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:08:33 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:08:33 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:08:33 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:08:33 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:08:33 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:08:33 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:08:33 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:11:51 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:11:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:11:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:11:51 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:11:51 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:11:51 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:11:51 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:11:52 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:11:52 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:11:52 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:11:52 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:11:52 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:11:52 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:11:52 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:11:52 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:11:52 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:11:52 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:11:52 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:11:52 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:11:52 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:11:52 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:11:52 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:11:52 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:11:52 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:11:52 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:11:52 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:11:52 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:11:52 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:11:52 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:11:52 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6999cd39]
2020-05-22 10:11:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:11:52 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:11:52 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:11:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:11:52 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:11:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:11:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:11:52 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:11:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:11:52 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:11:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:11:52 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:11:52 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:11:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:11:52 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:11:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:11:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:11:52 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:11:52 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:11:52 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:11:52 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:11:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:11:52 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:11:52 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:11:52 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:11:52 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:11:52 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:11:52 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:11:52 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:11:52 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:11:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:11:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:11:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:11:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:11:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:11:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:11:52 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:11:52 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:11:52 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:11:52 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:11:52 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:11:52 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 10:11:52 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 10:11:52 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:11:52 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:11:52 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:11:52 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:11:52 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:11:52 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:11:52 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:11:52 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:11:52 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:11:52 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:11:52 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:11:52 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:11:52 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:11:52 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:11:52 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:11:52 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:11:52 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:11:52 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:11:52 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:11:52 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:11:52 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:11:52 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:11:52 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:11:52 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:11:52 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:11:52 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:11:52 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:11:52 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:11:52 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:11:52 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:11:52 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:11:52 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:11:52 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:11:52 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:11:52 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:11:52 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:11:52 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:11:52 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:11:52 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:11:52 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:11:52 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:11:52 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:11:52 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:11:52 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:11:52 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:11:52 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62891fc8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:11:52 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:11:52 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:11:52 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ec65b5e]
2020-05-22 10:11:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:11:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:11:52 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:11:52 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:11:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:11:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:11:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:11:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:11:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:11:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:11:53 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:11:53 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:11:53 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:11:53 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:11:53 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 10:11:53 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 10:11:53 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fb8c87]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:11:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:11:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:11:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:11:53 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39909d1a]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:11:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:11:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:11:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:11:53 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:11:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:11:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18371d89]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:11:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:11:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:11:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:11:53 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4832f03b]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:11:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:11:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:11:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:11:53 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:11:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:11:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:11:53 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8816cc]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3ebe4ccc]
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d3c6593]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cbe7d4d]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:11:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:11:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:11:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2020-05-22 10:11:53 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, genre1_.id as id1_3_1_, genre1_.name as name2_3_1_ from book book0_ left outer join genre genre1_ on book0_.genre_id=genre1_.id where book0_.id=?
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5a1d85]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54755dd9]
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f1f7db2]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4462efe1]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:11:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:11:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:11:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2020-05-22 10:11:53 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, genre1_.id as id1_3_1_, genre1_.name as name2_3_1_ from book book0_ left outer join genre genre1_ on book0_.genre_id=genre1_.id where book0_.id=?
2020-05-22 10:11:53 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:11:53 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@44fff386]
2020-05-22 10:11:53 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fc713c9]
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:11:53 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:11:53 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:11:53 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:11:53 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:11:53 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:11:53 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:11:53 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2740e316] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:11:53 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:11:53 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 10:11:53 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:11:53 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:11:53 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14fded9d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:11:53 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:11:53 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 10:11:53 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:11:53 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 10:11:54 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:11:54 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 10:11:54 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 10:11:54 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:11:54 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:11:54 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:11:54 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:11:54 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:11:54 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:11:54 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4364863
2020-05-22 10:11:54 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: a6401fe6-6a91-4092-8104-8e28d105f6d8 (<unnamed>)
2020-05-22 10:11:54 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:11:54 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:11:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:11:54 DEBUG TransactionImpl:81 - begin
2020-05-22 10:11:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:11:54 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:11:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:11:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:11:54 DEBUG TransactionImpl:98 - committing
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:11:54 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:11:54 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:11:54 DEBUG TransactionImpl:81 - begin
2020-05-22 10:11:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:11:54 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:11:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:11:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:11:54 DEBUG TransactionImpl:98 - committing
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:11:54 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:11:54 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:11:54 DEBUG TransactionImpl:81 - begin
2020-05-22 10:11:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:11:54 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:11:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:11:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:11:54 DEBUG TransactionImpl:98 - committing
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:11:54 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:11:54 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:11:54 DEBUG TransactionImpl:81 - begin
2020-05-22 10:11:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:11:54 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:11:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:11:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:11:54 DEBUG TransactionImpl:98 - committing
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:11:54 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:11:54 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:11:54 DEBUG TransactionImpl:81 - begin
2020-05-22 10:11:54 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:11:54 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:11:54 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:11:54 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:11:54 DEBUG TransactionImpl:98 - committing
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:11:54 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:11:54 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:11:54 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:11:54 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:11:54 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:11:54 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:11:54 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:11:54 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:12:35 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:12:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:12:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:12:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:12:35 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:12:35 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:12:35 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:12:35 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:12:35 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:12:35 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:12:35 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:12:35 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:12:35 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:12:36 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:12:36 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:12:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:12:36 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:12:36 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:12:36 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:12:36 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:12:36 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:12:36 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:12:36 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:12:36 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:12:36 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:12:36 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:12:36 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:12:36 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:12:36 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:12:36 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@796d3c9f]
2020-05-22 10:12:36 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:12:36 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:12:36 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:12:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:12:36 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:12:36 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:12:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:12:36 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:12:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:12:36 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:12:36 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:12:36 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:12:36 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:12:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:12:36 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:12:36 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:12:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:12:36 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:12:36 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:12:36 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:12:36 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:12:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:12:36 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:12:36 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:12:36 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:12:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:12:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:12:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:12:36 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:12:36 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:12:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:12:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:12:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:12:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:12:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:12:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:12:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:12:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:12:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:12:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:12:36 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:12:36 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 10:12:36 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 10:12:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:12:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:12:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:12:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:12:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:12:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:12:36 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:12:36 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:12:36 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:12:36 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:12:36 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:12:36 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:12:36 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:12:36 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:12:36 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:12:36 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:12:36 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:12:36 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:12:36 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:12:36 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:12:36 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:12:36 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:12:36 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:12:36 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:12:36 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:12:36 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:12:36 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:12:36 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:12:36 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:12:36 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:12:36 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:12:36 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:12:36 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:12:36 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:12:36 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:12:36 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:12:36 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:12:36 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:12:36 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:12:36 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:12:36 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:12:36 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:12:36 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:12:36 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:12:36 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:12:36 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@43f61afb, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:12:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:12:36 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:12:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3ffb3598]
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:12:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:12:36 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:12:36 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:12:36 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 10:12:36 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 10:12:36 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5114b7c7]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:12:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:12:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:12:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:12:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b5a078a]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:12:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:12:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:12:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:12:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:12:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:12:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e64760]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:12:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:12:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:12:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:12:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43982337]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:12:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:12:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:12:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:12:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:12:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:12:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:12:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0ed952]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4ba1ae]
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d19d85]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42aae04d]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:12:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:12:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:12:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2020-05-22 10:12:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, genre1_.id as id1_3_1_, genre1_.name as name2_3_1_ from book book0_ left outer join genre genre1_ on book0_.genre_id=genre1_.id where book0_.id=?
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@332bcab0]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6342ff7f]
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@403c3a01]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2daf06fc]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:12:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:12:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:12:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre1_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2020-05-22 10:12:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, genre1_.id as id1_3_1_, genre1_.name as name2_3_1_ from book book0_ left outer join genre genre1_ on book0_.genre_id=genre1_.id where book0_.id=?
2020-05-22 10:12:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:12:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f327096]
2020-05-22 10:12:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d61a348]
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:12:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:12:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:12:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:12:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:12:36 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:12:37 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:12:37 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3664f108] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:12:37 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:12:37 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 10:12:37 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:12:37 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:12:37 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@43b5021c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:12:37 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:12:37 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 10:12:37 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:12:37 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 10:12:37 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:12:37 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 10:12:37 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 10:12:37 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:12:37 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:12:37 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:12:37 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:12:37 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:12:37 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:12:37 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c7dfc05
2020-05-22 10:12:37 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 969d4aa9-3ef7-48fb-bd2b-9d50a2527489 (<unnamed>)
2020-05-22 10:12:37 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:12:37 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:12:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:12:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:12:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:12:37 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:12:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:12:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:12:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:12:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:12:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:12:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:12:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:12:37 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:12:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:12:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:12:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:12:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:12:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:12:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:12:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:12:37 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:12:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:12:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:12:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:12:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:12:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:12:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:12:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:12:37 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:12:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:12:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:12:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:12:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:12:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:12:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:12:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:12:37 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:12:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:12:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:12:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:12:37 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:12:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:12:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:12:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:12:37 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:12:37 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:12:37 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:12:37 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:12:37 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:12:37 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@17043b04
2020-05-22 10:12:37 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:12:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:12:37 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:12:37 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:12:37 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:12:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:12:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:12:37 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 10:12:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 10:12:37 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:12:37 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 10:12:37 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 10:12:37 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:12:37 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:12:37 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 10:12:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:12:37 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:12:37 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:12:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:12:37 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:12:37 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:12:37 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:12:37 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:12:37 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:12:37 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:12:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:12:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:08 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:18:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:18:08 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:18:08 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:18:08 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:18:08 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:18:09 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:18:09 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:18:09 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:18:09 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:18:09 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:18:09 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:18:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:18:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:18:09 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:18:09 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:18:09 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:18:09 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:18:09 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:18:09 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:18:10 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:18:10 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:18:10 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:18:10 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:18:10 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:18:10 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:18:10 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:18:10 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 10:18:10 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:18:10 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:18:10 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:18:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:18:10 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:18:10 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:18:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:18:10 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:18:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:18:10 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:18:10 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:18:10 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:18:10 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:18:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:18:10 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:18:10 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:18:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:18:10 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:18:10 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:18:10 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:18:10 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:18:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:18:10 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:18:10 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:18:10 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:18:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:18:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:18:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:18:10 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:18:10 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:18:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:18:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:18:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:18:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:18:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:18:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:18:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:18:10 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:18:10 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:18:10 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:18:10 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:18:10 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 10:18:10 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 10:18:10 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:18:10 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:18:10 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:18:10 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:18:10 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:18:10 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:18:10 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:18:10 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:18:10 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:18:10 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:18:10 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:18:10 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:18:10 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:18:10 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:18:10 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:18:10 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:18:10 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:18:10 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:18:10 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:18:10 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:18:10 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:18:10 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:18:10 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:18:10 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:18:10 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:18:10 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:18:10 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:18:10 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:18:10 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:18:10 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:18:10 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:18:10 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:18:10 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:18:10 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:18:10 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:18:10 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:18:10 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:18:10 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:18:10 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:18:10 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:18:10 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:18:10 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:18:10 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:18:10 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:18:10 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:18:10 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68217d41, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:18:10 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:18:10 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:18:10 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@470a659f]
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:18:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:18:10 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:18:10 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:18:10 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 10:18:10 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 10:18:10 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f324455]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:18:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:18:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:18:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:18:10 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554c4eaa]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:18:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:18:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:18:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:18:10 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:18:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:18:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0ed952]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:18:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:18:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:18:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:18:10 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d074b14]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:18:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:18:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:18:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:18:10 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:18:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:18:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:18:10 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559cedee]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a8d467e]
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3679d92e]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28237492]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:18:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:18:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:18:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 10:18:10 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abdec0e]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b5c4f17]
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ca8fcf3]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7efd0b]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:18:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:18:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:18:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 10:18:10 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 10:18:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:18:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3481ff98]
2020-05-22 10:18:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ddb3ae8]
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:18:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:18:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:18:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:18:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:18:10 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:18:10 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:18:10 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@47768e74] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:18:10 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:18:10 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 10:18:10 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:18:10 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:18:10 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@39c96e48] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:18:10 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:18:10 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 10:18:11 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:18:11 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 10:18:11 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:18:11 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 10:18:11 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 10:18:11 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:18:11 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:18:11 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:18:11 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:18:11 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:18:11 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:18:11 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@48a663e9
2020-05-22 10:18:11 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 301336e6-c7da-4a6d-9536-d629c78cbd2d (<unnamed>)
2020-05-22 10:18:11 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:18:11 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:18:11 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:18:11 DEBUG TransactionImpl:81 - begin
2020-05-22 10:18:11 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:18:11 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:18:11 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:18:11 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:18:11 DEBUG TransactionImpl:98 - committing
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:18:11 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:18:11 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:18:11 DEBUG TransactionImpl:81 - begin
2020-05-22 10:18:11 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:18:11 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:18:11 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:18:11 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:18:11 DEBUG TransactionImpl:98 - committing
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:18:11 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:18:11 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:18:11 DEBUG TransactionImpl:81 - begin
2020-05-22 10:18:11 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:18:11 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:18:11 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:18:11 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:18:11 DEBUG TransactionImpl:98 - committing
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:18:11 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:18:11 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:18:11 DEBUG TransactionImpl:81 - begin
2020-05-22 10:18:11 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:18:11 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:18:11 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:18:11 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:18:11 DEBUG TransactionImpl:98 - committing
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:18:11 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:18:11 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:18:11 DEBUG TransactionImpl:81 - begin
2020-05-22 10:18:11 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:18:11 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:18:11 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:18:11 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:18:11 DEBUG TransactionImpl:98 - committing
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:18:11 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:18:11 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:18:11 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:18:11 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:18:11 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:18:11 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:18:11 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:18:11 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:18:11 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:18:11 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@22dc59b2
2020-05-22 10:18:11 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:18:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:18:11 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:18:11 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:18:11 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:18:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:18:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:18:11 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 10:18:11 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 10:18:11 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:18:11 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 10:18:11 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 10:18:11 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:18:11 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:18:11 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 10:18:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:18:11 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:18:11 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:18:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:18:11 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:18:11 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:18:11 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:18:11 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:18:11 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:18:11 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:18:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:18:11 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:18:11 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:18:11 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:18:11 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:18:11 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:18:11 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:18:11 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:18:11 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:18:11 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:22:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:22:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:22:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:22:14 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:22:14 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:22:14 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:22:14 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:22:15 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:22:15 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:22:15 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:22:15 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:22:15 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:22:15 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:22:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:22:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:22:15 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:22:15 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:22:15 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:22:15 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:22:15 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:22:15 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:22:15 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:22:15 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:22:15 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:22:15 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:22:15 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:22:15 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:22:15 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:22:15 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6999cd39]
2020-05-22 10:22:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:22:15 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:22:15 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:22:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:22:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:22:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:22:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:22:15 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:22:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:22:15 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:22:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:22:15 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:22:15 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:22:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:22:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:22:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:22:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:22:15 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:22:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:22:15 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:22:15 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:22:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:22:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:22:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:22:15 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:22:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:22:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:22:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:22:15 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:22:15 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:22:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:22:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:22:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:22:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:22:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:22:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:22:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:22:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:22:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:22:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:22:15 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:22:15 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 10:22:15 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 10:22:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:22:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:22:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:22:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:22:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:22:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:22:15 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:22:15 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:22:15 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:22:15 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:22:15 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:22:15 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:22:15 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:22:15 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:22:15 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:22:15 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:22:15 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:22:15 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:22:15 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:22:15 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:22:15 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:22:15 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:22:15 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:22:15 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:22:15 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:22:15 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:22:15 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:22:15 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:22:15 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:22:15 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:22:15 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:22:15 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:22:15 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:22:15 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:22:15 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:22:15 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:22:15 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:22:15 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:22:15 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:22:15 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:22:15 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:22:15 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:22:15 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:22:15 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:22:15 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:22:15 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62891fc8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:22:15 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:22:15 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:22:15 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ec65b5e]
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:22:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:22:15 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:22:15 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:22:15 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 10:22:15 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 10:22:15 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 10:22:15 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:22:15 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:22:15 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 10:22:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:22:15 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:22:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:22:15 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:22:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fb8c87]
2020-05-22 10:22:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:22:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:22:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:22:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:22:15 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:22:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39909d1a]
2020-05-22 10:22:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:22:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:22:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:22:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:22:15 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:22:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:22:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18371d89]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:22:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:22:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:22:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:22:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4832f03b]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:22:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:22:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:22:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:22:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:22:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:22:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:22:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8816cc]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@135a8c6f]
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a35bd]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e130bf]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:22:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:22:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:22:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 10:22:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66933239]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41ad373]
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6801b414]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d61a348]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:22:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:22:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:22:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 10:22:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 10:22:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:22:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@732f6050]
2020-05-22 10:22:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fbc1bb]
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:22:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:22:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:22:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:22:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:22:16 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:22:16 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:22:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f973a14] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:22:16 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:22:16 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 10:22:16 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:22:16 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:22:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3a4ab7f7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:22:16 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:22:16 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 10:22:16 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:22:16 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 10:22:16 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:22:16 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 10:22:16 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 10:22:16 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:22:16 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:22:16 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:22:16 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:22:16 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:22:16 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:22:16 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@497b560e
2020-05-22 10:22:16 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 10bbf300-74bc-4464-85b8-2547afc29509 (<unnamed>)
2020-05-22 10:22:16 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:22:16 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:22:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:22:16 DEBUG TransactionImpl:81 - begin
2020-05-22 10:22:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:22:16 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:22:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:22:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:22:16 DEBUG TransactionImpl:98 - committing
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:22:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:22:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:22:16 DEBUG TransactionImpl:81 - begin
2020-05-22 10:22:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:22:16 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:22:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:22:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:22:16 DEBUG TransactionImpl:98 - committing
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:22:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:22:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:22:16 DEBUG TransactionImpl:81 - begin
2020-05-22 10:22:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:22:16 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:22:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:22:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:22:16 DEBUG TransactionImpl:98 - committing
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:22:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:22:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:22:16 DEBUG TransactionImpl:81 - begin
2020-05-22 10:22:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:22:16 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:22:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:22:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:22:16 DEBUG TransactionImpl:98 - committing
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:22:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:22:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:22:16 DEBUG TransactionImpl:81 - begin
2020-05-22 10:22:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:22:16 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:22:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:22:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:22:16 DEBUG TransactionImpl:98 - committing
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:22:16 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:22:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:22:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:22:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:22:16 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:22:16 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:22:16 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:22:16 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:22:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:22:16 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3443e476
2020-05-22 10:22:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:22:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:22:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:22:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:22:16 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:22:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:22:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:22:16 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 10:22:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 10:22:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:22:16 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 10:22:16 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 10:22:16 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:22:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:22:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 10:22:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:22:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:22:16 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:22:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:22:16 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:22:16 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:22:16 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:22:16 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:22:16 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:22:16 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:22:16 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:22:16 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:22:16 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:22:16 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:22:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:22:16 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:22:16 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:22:16 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:22:16 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:22:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:26:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:26:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:26:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:26:04 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:26:04 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:26:05 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:26:05 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:26:05 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:26:05 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:26:05 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:26:05 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:26:05 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:26:05 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:26:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:26:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:26:05 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:26:05 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:26:05 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:26:05 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:26:05 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:26:05 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:26:06 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:26:06 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:26:06 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:26:06 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:26:06 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:26:06 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:26:06 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:26:06 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@534ca02b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@29a23c3d]
2020-05-22 10:26:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:26:06 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:26:06 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:26:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:26:06 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:26:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:26:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:26:06 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:26:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:26:06 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:26:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:26:06 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:26:06 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:26:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:26:06 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:26:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:26:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:26:06 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:26:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:26:06 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:26:06 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:26:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:26:06 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:26:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:26:06 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:26:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:26:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:26:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:26:06 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:26:06 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:26:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:26:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:26:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:26:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:26:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:26:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:26:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:26:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:26:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:26:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:26:06 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:26:06 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 10:26:06 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 10:26:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:26:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:26:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:26:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:26:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:26:06 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:26:06 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:26:06 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:26:06 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:26:06 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:26:06 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:26:06 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:26:06 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:26:06 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:26:06 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:26:06 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:26:06 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:26:06 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:26:06 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:26:06 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:26:06 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:26:06 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:26:06 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:26:06 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:26:06 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:26:06 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:26:06 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:26:06 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:26:06 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:26:06 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:26:06 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:26:06 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:26:06 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:26:06 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:26:06 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:26:06 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:26:06 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:26:06 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:26:06 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:26:06 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:26:06 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:26:06 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:26:06 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:26:06 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:26:06 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:26:06 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@41f4fe5, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:26:06 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:26:06 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:26:06 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@534ca02b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@327ed9f5]
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:26:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:26:06 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:26:06 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:26:06 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 10:26:06 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 10:26:06 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c79088e]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:26:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:26:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:26:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:26:06 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32fa809f]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:26:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:26:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:26:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:26:06 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:26:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:26:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a8e6e89]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:26:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:26:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:26:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:26:06 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63d5874f]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:26:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:26:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:26:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:26:06 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:26:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:26:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:26:06 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5984feef]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47b11ec7]
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bfb583b]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5c4f17]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:26:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:26:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:26:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 10:26:06 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@436bd4df]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@149b0577]
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5740ff5e]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0b7e5a]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:26:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:26:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:26:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 10:26:06 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 10:26:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:26:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@52b3bf03]
2020-05-22 10:26:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cca01a8]
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:26:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:26:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:26:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:26:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:26:06 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:26:06 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:26:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@655f69da] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:26:06 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:26:06 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 10:26:06 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:26:06 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:26:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@365cdacf] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:26:06 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:26:06 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 10:26:06 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:26:06 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 10:26:07 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:26:07 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 10:26:07 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 10:26:07 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:26:07 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:26:07 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:26:07 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:26:07 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:26:07 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:26:07 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1fedf0a4
2020-05-22 10:26:07 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9cf59dcb-c131-4d2f-be13-5804ff62d056 (<unnamed>)
2020-05-22 10:26:07 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:26:07 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:26:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:26:07 DEBUG TransactionImpl:81 - begin
2020-05-22 10:26:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:26:07 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:26:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:26:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:26:07 DEBUG TransactionImpl:98 - committing
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:26:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:26:07 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:26:07 DEBUG TransactionImpl:81 - begin
2020-05-22 10:26:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:26:07 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:26:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:26:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:26:07 DEBUG TransactionImpl:98 - committing
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:26:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:26:07 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:26:07 DEBUG TransactionImpl:81 - begin
2020-05-22 10:26:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:26:07 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:26:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:26:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:26:07 DEBUG TransactionImpl:98 - committing
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:26:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:26:07 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:26:07 DEBUG TransactionImpl:81 - begin
2020-05-22 10:26:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:26:07 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:26:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:26:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:26:07 DEBUG TransactionImpl:98 - committing
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:26:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:26:07 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:26:07 DEBUG TransactionImpl:81 - begin
2020-05-22 10:26:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:26:07 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:26:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:26:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:26:07 DEBUG TransactionImpl:98 - committing
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:26:07 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:26:07 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:26:07 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:26:07 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:26:07 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:26:07 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:26:07 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:26:07 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:26:07 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:26:07 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3513c84c
2020-05-22 10:26:07 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:26:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:26:07 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:26:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:26:07 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:26:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:26:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:26:07 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 10:26:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 10:26:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:26:07 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 10:26:07 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 10:26:07 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:26:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:26:07 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 10:26:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:26:07 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:26:07 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:26:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:26:07 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:26:07 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:26:07 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:26:07 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:26:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:26:07 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:26:07 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:26:07 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:26:07 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:26:07 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:26:07 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:26:07 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:26:07 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:26:07 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:26:07 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:26:07 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:54 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:31:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:31:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:31:54 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:31:54 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:31:54 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:31:54 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:31:54 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:31:54 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:31:54 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:31:54 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:31:54 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:31:54 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:31:54 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:31:54 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:31:54 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:31:54 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:31:54 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:31:54 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:31:54 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:31:54 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:31:54 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:31:55 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:31:55 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:31:55 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:31:55 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:31:55 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:31:55 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:31:55 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:31:55 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6999cd39]
2020-05-22 10:31:55 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:31:55 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:31:55 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:31:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:31:55 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:31:55 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:31:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:31:55 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:31:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:31:55 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:31:55 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:31:55 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:31:55 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:31:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:31:55 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:31:55 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:31:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:31:55 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:31:55 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:31:55 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:31:55 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:31:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:31:55 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:31:55 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:31:55 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:31:55 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:31:55 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:31:55 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:31:55 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:31:55 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:31:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:31:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:31:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:31:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:31:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:31:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:31:55 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:31:55 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:31:55 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:31:55 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:31:55 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:31:55 DEBUG CollectionBinder:899 - Binding a OneToMany: dev.hibernate.model.Book.authors through a foreign key
2020-05-22 10:31:55 DEBUG CollectionBinder:937 - Mapping collection: dev.hibernate.model.Book.authors -> author
2020-05-22 10:31:55 DEBUG CollectionSecondPass:67 - Mapped collection key: book_id, one-to-many: dev.hibernate.model.Author
2020-05-22 10:31:55 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:31:55 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:31:55 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:31:55 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:31:55 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:31:55 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:31:55 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:31:55 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:31:55 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:31:55 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:31:55 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:31:55 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:31:55 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:31:55 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:31:55 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:31:55 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:31:55 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:31:55 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:31:55 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:31:55 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:31:55 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:31:55 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:31:55 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:31:55 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:31:55 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:31:55 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:31:55 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:31:55 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:31:55 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:31:55 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:31:55 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:31:55 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:31:55 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:31:55 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:31:55 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:31:55 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:31:55 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:31:55 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:31:55 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:31:55 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:31:55 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:31:55 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:31:55 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:31:55 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ea04618, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:31:55 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:31:55 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:31:55 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@73a19967]
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:31:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:31:55 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:31:55 DEBUG AbstractCollectionPersister:691 -  Row insert: update author set book_id=? where id=?
2020-05-22 10:31:55 DEBUG AbstractCollectionPersister:694 -  Row update: update author set  where id=?
2020-05-22 10:31:55 DEBUG AbstractCollectionPersister:697 -  Row delete: update author set book_id=null where book_id=? and id=?
2020-05-22 10:31:55 DEBUG AbstractCollectionPersister:700 -  One-shot delete: update author set book_id=null where book_id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@642413d4]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:31:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:31:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:31:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2020-05-22 10:31:55 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24386839]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:31:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:31:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:31:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2020-05-22 10:31:55 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:31:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:31:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e2232f]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:31:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:31:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:31:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:31:55 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462e1e64]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:31:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:31:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:31:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:31:55 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:31:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:31:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:31:55 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c0905f6]
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ed3f30]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e3e1014]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:31:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:31:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:31:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {book_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - authors1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

2020-05-22 10:31:55 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.book_id as book_id4_0_1_, authors1_.id as id1_0_1_, authors1_.id as id1_0_2_, authors1_.name as name2_0_2_, authors1_.surname as surname3_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book book0_ left outer join author authors1_ on book0_.id=authors1_.book_id left outer join genre genre2_ on book0_.genre_id=genre2_.id where book0_.id=?
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f1f7db2]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c3e4b1a]
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2db4ad1]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bfb583b]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:31:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:31:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:31:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {book_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - authors1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

2020-05-22 10:31:55 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.book_id as book_id4_0_1_, authors1_.id as id1_0_1_, authors1_.id as id1_0_2_, authors1_.name as name2_0_2_, authors1_.surname as surname3_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book book0_ left outer join author authors1_ on book0_.id=authors1_.book_id left outer join genre genre2_ on book0_.genre_id=genre2_.id where book0_.id=?
2020-05-22 10:31:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:31:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76b47204]
2020-05-22 10:31:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6ccc97]
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:31:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:31:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:31:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:31:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {book_id4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - authors0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:31:55 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.book_id as book_id4_0_0_, authors0_.id as id1_0_0_, authors0_.id as id1_0_1_, authors0_.name as name2_0_1_, authors0_.surname as surname3_0_1_ from author authors0_ where authors0_.book_id=?
2020-05-22 10:31:55 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:31:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6a9cd0f8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:31:55 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:31:55 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:31:55 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), book_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:31:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2721044] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:31:55 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:31:56 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:31:56 DEBUG SQL:127 - alter table author add constraint FKqi5nll4mal57ohohlv5g0qlv2 foreign key (book_id) references book (id)
2020-05-22 10:31:56 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:31:56 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:31:56 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:31:56 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:31:56 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:31:56 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:31:56 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:31:56 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4a8a0099
2020-05-22 10:31:56 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 31861126-0f6e-439d-8abb-aae1e482c3d5 (<unnamed>)
2020-05-22 10:31:56 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:31:56 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:31:56 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:31:56 DEBUG TransactionImpl:81 - begin
2020-05-22 10:31:56 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:31:56 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:31:56 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:31:56 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:31:56 DEBUG TransactionImpl:98 - committing
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:31:56 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:31:56 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:31:56 DEBUG TransactionImpl:81 - begin
2020-05-22 10:31:56 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:31:56 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:31:56 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:31:56 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:31:56 DEBUG TransactionImpl:98 - committing
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:31:56 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:31:56 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:31:56 DEBUG TransactionImpl:81 - begin
2020-05-22 10:31:56 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:31:56 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:31:56 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:31:56 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:31:56 DEBUG TransactionImpl:98 - committing
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:31:56 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:31:56 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:31:56 DEBUG TransactionImpl:81 - begin
2020-05-22 10:31:56 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:31:56 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:31:56 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:31:56 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:31:56 DEBUG TransactionImpl:98 - committing
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:31:56 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:31:56 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:31:56 DEBUG TransactionImpl:81 - begin
2020-05-22 10:31:56 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:31:56 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:31:56 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:31:56 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:31:56 DEBUG TransactionImpl:98 - committing
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:31:56 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:31:56 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:31:56 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:31:56 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:31:56 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:31:56 DEBUG SQL:127 - update author set book_id=? where id=?
2020-05-22 10:31:56 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:31:56 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:31:56 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:31:56 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2abc8034
2020-05-22 10:31:56 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:31:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:31:56 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:31:56 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:31:56 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:31:56 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:31:56 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:31:56 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 10:31:56 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 10:31:56 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:31:56 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 10:31:56 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 10:31:56 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:31:56 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:31:56 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 10:31:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:31:56 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:31:56 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:31:56 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:31:56 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:31:56 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:31:56 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:31:56 DEBUG SQL:127 - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:31:56 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:31:56 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:31:56 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:31:56 DEBUG SQL:127 - select authors0_.book_id as book_id4_0_0_, authors0_.id as id1_0_0_, authors0_.id as id1_0_1_, authors0_.name as name2_0_1_, authors0_.surname as surname3_0_1_ from author authors0_ where authors0_.book_id=?
2020-05-22 10:31:56 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:31:56 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:31:56 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:31:56 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:31:56 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:31:56 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:31:56 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:31:56 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:00 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:33:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:33:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:33:00 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:33:00 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:33:00 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:33:00 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:33:00 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:33:01 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:33:01 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:33:01 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:33:01 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:33:01 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:33:01 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:33:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:33:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:33:01 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:33:01 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:33:01 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:33:01 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:33:01 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:33:01 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:33:01 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:33:01 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:33:01 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:33:01 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:33:01 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:33:01 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:33:02 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:33:02 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 10:33:02 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:33:02 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:33:02 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:33:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:33:02 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:33:02 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:33:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:33:02 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:33:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:33:02 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:33:02 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:33:02 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:33:02 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:33:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:33:02 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:33:02 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:33:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:33:02 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:33:02 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:33:02 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:33:02 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:33:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:33:02 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:33:02 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:33:02 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:33:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:33:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:33:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:33:02 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:33:02 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:33:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:33:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:33:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:33:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:33:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:33:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:33:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:33:02 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:33:02 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:33:02 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:33:02 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:33:02 DEBUG CollectionBinder:899 - Binding a OneToMany: dev.hibernate.model.Book.authors through a foreign key
2020-05-22 10:33:02 DEBUG CollectionBinder:937 - Mapping collection: dev.hibernate.model.Book.authors -> author
2020-05-22 10:33:02 DEBUG CollectionSecondPass:67 - Mapped collection key: book_id, one-to-many: dev.hibernate.model.Author
2020-05-22 10:33:02 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:33:02 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:33:02 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:33:02 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:33:02 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:33:02 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:33:02 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:33:02 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:33:02 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:33:02 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:33:02 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:33:02 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:33:02 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:33:02 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:33:02 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:33:02 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:33:02 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:33:02 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:33:02 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:33:02 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:33:02 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:33:02 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:33:02 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:33:02 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:33:02 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:33:02 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:33:02 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:33:02 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:33:02 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:33:02 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:33:02 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:33:02 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:33:02 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:33:02 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:33:02 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:33:02 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:33:02 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:33:02 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:33:02 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:33:02 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:33:02 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:33:02 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:33:02 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:33:02 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@431f1eaf, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:33:02 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:33:02 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:33:02 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2015b2cd]
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:33:02 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:33:02 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:33:02 DEBUG AbstractCollectionPersister:691 -  Row insert: update author set book_id=? where id=?
2020-05-22 10:33:02 DEBUG AbstractCollectionPersister:694 -  Row update: update author set  where id=?
2020-05-22 10:33:02 DEBUG AbstractCollectionPersister:697 -  Row delete: update author set book_id=null where book_id=? and id=?
2020-05-22 10:33:02 DEBUG AbstractCollectionPersister:700 -  One-shot delete: update author set book_id=null where book_id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76464795]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:33:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:33:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:33:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2020-05-22 10:33:02 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fb392c4]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:33:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:33:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:33:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2020-05-22 10:33:02 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:33:02 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:33:02 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@404eca05]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:33:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:33:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:33:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:33:02 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61a91c9b]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:33:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:33:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:33:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:33:02 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:33:02 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:33:02 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:33:02 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2121d1f9]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a8e6e89]
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6419a0e1]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7426a448]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:33:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:33:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:33:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {book_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - authors1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

2020-05-22 10:33:02 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.book_id as book_id4_0_1_, authors1_.id as id1_0_1_, authors1_.id as id1_0_2_, authors1_.name as name2_0_2_, authors1_.surname as surname3_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book book0_ left outer join author authors1_ on book0_.id=authors1_.book_id left outer join genre genre2_ on book0_.genre_id=genre2_.id where book0_.id=?
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7da31a40]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b5a1d85]
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e130bf]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4462efe1]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:33:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:33:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:33:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {book_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - authors1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

2020-05-22 10:33:02 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.book_id as book_id4_0_1_, authors1_.id as id1_0_1_, authors1_.id as id1_0_2_, authors1_.name as name2_0_2_, authors1_.surname as surname3_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book book0_ left outer join author authors1_ on book0_.id=authors1_.book_id left outer join genre genre2_ on book0_.genre_id=genre2_.id where book0_.id=?
2020-05-22 10:33:02 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:33:02 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8cc8cdb]
2020-05-22 10:33:02 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e236278]
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:33:02 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:33:02 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:33:02 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:33:02 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {book_id4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - authors0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:33:02 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.book_id as book_id4_0_0_, authors0_.id as id1_0_0_, authors0_.id as id1_0_1_, authors0_.name as name2_0_1_, authors0_.surname as surname3_0_1_ from author authors0_ where authors0_.book_id=?
2020-05-22 10:33:02 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:33:02 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4fc5563d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:33:02 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:33:02 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:33:02 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), book_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:33:02 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@303c55fa] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:33:02 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:33:02 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:33:02 DEBUG SQL:127 - alter table author add constraint FKqi5nll4mal57ohohlv5g0qlv2 foreign key (book_id) references book (id)
2020-05-22 10:33:02 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:33:02 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:33:02 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:33:02 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:33:02 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:33:02 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:33:02 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:33:02 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e4c6583
2020-05-22 10:33:02 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: fe64c9aa-2dfa-4f56-b932-f363960d1b73 (<unnamed>)
2020-05-22 10:33:02 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:33:02 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:33:02 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:33:02 DEBUG TransactionImpl:81 - begin
2020-05-22 10:33:03 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:33:03 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:33:03 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:33:03 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:33:03 DEBUG TransactionImpl:98 - committing
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:33:03 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:33:03 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:33:03 DEBUG TransactionImpl:81 - begin
2020-05-22 10:33:03 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:33:03 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:33:03 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:33:03 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:33:03 DEBUG TransactionImpl:98 - committing
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:33:03 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:33:03 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:33:03 DEBUG TransactionImpl:81 - begin
2020-05-22 10:33:03 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:33:03 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:33:03 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:33:03 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:33:03 DEBUG TransactionImpl:98 - committing
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:33:03 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:33:03 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:33:03 DEBUG TransactionImpl:81 - begin
2020-05-22 10:33:03 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:33:03 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:33:03 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:33:03 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:33:03 DEBUG TransactionImpl:98 - committing
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:33:03 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:33:03 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:33:03 DEBUG TransactionImpl:81 - begin
2020-05-22 10:33:03 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:33:03 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:33:03 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:33:03 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:33:03 DEBUG TransactionImpl:98 - committing
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:33:03 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:33:03 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:33:03 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:33:03 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:33:03 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:33:03 DEBUG SQL:127 - update author set book_id=? where id=?
2020-05-22 10:33:03 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:33:03 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:33:03 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:33:03 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4978777f
2020-05-22 10:33:03 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:33:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:33:03 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:33:03 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:33:03 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:33:03 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:33:03 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:33:03 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 10:33:03 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 10:33:03 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:33:03 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 10:33:03 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 10:33:03 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:33:03 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:33:03 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 10:33:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:33:03 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:33:03 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:33:03 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:33:03 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:33:03 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:33:03 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:33:03 DEBUG SQL:127 - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:33:03 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:33:03 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:33:03 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:33:03 DEBUG SQL:127 - select authors0_.book_id as book_id4_0_0_, authors0_.id as id1_0_0_, authors0_.id as id1_0_1_, authors0_.name as name2_0_1_, authors0_.surname as surname3_0_1_ from author authors0_ where authors0_.book_id=?
2020-05-22 10:33:03 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:33:03 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:33:03 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:33:03 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:33:03 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:33:03 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:33:03 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:33:03 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:20 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:36:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:36:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:36:20 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:36:20 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:36:20 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:36:20 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:36:20 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:36:21 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:36:21 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:36:21 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:36:21 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:36:21 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:36:21 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:36:21 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:36:21 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:36:21 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:36:21 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:36:21 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:36:21 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:36:21 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:36:21 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:36:21 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:36:21 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:36:21 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:36:21 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:36:21 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:36:21 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:36:21 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:36:21 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@534ca02b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@29a23c3d]
2020-05-22 10:36:21 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:36:21 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:36:21 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:36:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:36:21 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:36:21 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:36:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:36:21 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:36:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:36:21 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:36:21 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:36:21 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:36:21 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:36:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:36:21 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:36:21 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:36:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:36:21 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:36:21 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:36:21 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:36:21 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:36:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:36:21 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:36:21 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='book_id', referencedColumn='', mappedBy=''}
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:36:21 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:36:21 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:36:21 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:36:21 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:36:21 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:36:21 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:36:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:36:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:36:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:36:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:36:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:36:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:36:21 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:36:21 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:36:21 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:36:21 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:36:21 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:36:21 DEBUG CollectionBinder:899 - Binding a OneToMany: dev.hibernate.model.Book.authors through a foreign key
2020-05-22 10:36:21 DEBUG CollectionBinder:937 - Mapping collection: dev.hibernate.model.Book.authors -> author
2020-05-22 10:36:21 DEBUG CollectionSecondPass:67 - Mapped collection key: book_id, one-to-many: dev.hibernate.model.Author
2020-05-22 10:36:21 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:36:21 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:36:21 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:36:21 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:36:21 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:36:21 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:36:21 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:36:21 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:36:21 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:36:21 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:36:21 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:36:21 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:36:21 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:36:21 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:36:21 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:36:21 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:36:21 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:36:21 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:36:21 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:36:21 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:36:21 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:36:21 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:36:21 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:36:21 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:36:21 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:36:21 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:36:21 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:36:21 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:36:21 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:36:21 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:36:21 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:36:21 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:36:21 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:36:21 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:36:21 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:36:21 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:36:21 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:36:21 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:36:21 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:36:21 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:36:21 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:36:21 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:36:21 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:36:21 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7cb8437d, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:36:21 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:36:21 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:36:21 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@534ca02b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4016ccc1]
2020-05-22 10:36:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:36:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:36:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:36:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:36:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:36:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:36:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:36:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:36:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:36:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:36:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:36:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:36:22 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:36:22 DEBUG AbstractCollectionPersister:691 -  Row insert: update author set book_id=? where id=?
2020-05-22 10:36:22 DEBUG AbstractCollectionPersister:694 -  Row update: update author set  where id=?
2020-05-22 10:36:22 DEBUG AbstractCollectionPersister:697 -  Row delete: update author set book_id=null where book_id=? and id=?
2020-05-22 10:36:22 DEBUG AbstractCollectionPersister:700 -  One-shot delete: update author set book_id=null where book_id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_2_ from genre genre_ where genre_.id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106d77da]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:36:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:36:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:36:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2020-05-22 10:36:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c281ed]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:36:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:36:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:36:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2020-05-22 10:36:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:36:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:36:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a4401]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:36:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:36:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:36:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:36:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e64760]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:36:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:36:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:36:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:36:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:36:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:36:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:36:22 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43982337]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4ba1ae]
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7426a448]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f798482]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:36:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:36:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:36:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {book_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - authors1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

2020-05-22 10:36:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.book_id as book_id4_0_1_, authors1_.id as id1_0_1_, authors1_.id as id1_0_2_, authors1_.name as name2_0_2_, authors1_.surname as surname3_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book book0_ left outer join author authors1_ on book0_.id=authors1_.book_id left outer join genre genre2_ on book0_.genre_id=genre2_.id where book0_.id=?
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fc1020a]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2629d5dc]
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2596d7f4]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4599c0]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:36:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:36:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:36:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {book_id4_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - authors1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre2_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

2020-05-22 10:36:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.book_id as book_id4_0_1_, authors1_.id as id1_0_1_, authors1_.id as id1_0_2_, authors1_.name as name2_0_2_, authors1_.surname as surname3_0_2_, genre2_.id as id1_2_3_, genre2_.name as name2_2_3_ from book book0_ left outer join author authors1_ on book0_.id=authors1_.book_id left outer join genre genre2_ on book0_.genre_id=genre2_.id where book0_.id=?
2020-05-22 10:36:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:36:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a901445]
2020-05-22 10:36:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67f77f6e]
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:36:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:36:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:36:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:36:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {book_id4_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - authors0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:36:22 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.book_id as book_id4_0_0_, authors0_.id as id1_0_0_, authors0_.id as id1_0_1_, authors0_.name as name2_0_1_, authors0_.surname as surname3_0_1_ from author authors0_ where authors0_.book_id=?
2020-05-22 10:36:22 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:36:22 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@49cb1baf] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:36:22 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:36:22 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:36:22 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), book_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:36:22 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@655f69da] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:36:22 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:36:22 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:36:22 DEBUG SQL:127 - alter table author add constraint FKqi5nll4mal57ohohlv5g0qlv2 foreign key (book_id) references book (id)
2020-05-22 10:36:22 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:36:22 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:36:22 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:36:22 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:36:22 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:36:22 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:36:22 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:36:22 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@37e69c43
2020-05-22 10:36:22 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: f584ed28-1161-4e73-be51-7194555226f5 (<unnamed>)
2020-05-22 10:36:22 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:36:22 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:36:22 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:36:22 DEBUG TransactionImpl:81 - begin
2020-05-22 10:36:22 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:36:22 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:36:22 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:36:22 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:36:22 DEBUG TransactionImpl:98 - committing
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:36:22 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:36:22 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:36:22 DEBUG TransactionImpl:81 - begin
2020-05-22 10:36:22 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:36:22 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:36:22 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:36:22 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:36:22 DEBUG TransactionImpl:98 - committing
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:36:22 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:36:22 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:36:22 DEBUG TransactionImpl:81 - begin
2020-05-22 10:36:22 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:36:22 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:36:22 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:36:22 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:36:22 DEBUG TransactionImpl:98 - committing
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:36:22 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:36:22 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:36:22 DEBUG TransactionImpl:81 - begin
2020-05-22 10:36:22 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:36:22 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:36:22 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:36:22 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:36:22 DEBUG TransactionImpl:98 - committing
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:36:22 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:36:22 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:36:22 DEBUG TransactionImpl:81 - begin
2020-05-22 10:36:22 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:36:22 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:36:22 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:36:22 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:36:22 DEBUG TransactionImpl:98 - committing
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:36:22 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:36:22 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:36:22 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:36:22 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:36:22 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG SQL:127 - update author set book_id=? where id=?
2020-05-22 10:36:22 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:36:22 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:36:22 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@ca8ef3a
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:36:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:36:22 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:36:22 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:36:22 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:36:22 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:36:22 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 10:36:22 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 10:36:22 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:36:22 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 10:36:22 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 10:36:22 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:36:22 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 10:36:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:36:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:36:22 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:36:22 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:36:22 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG SQL:127 - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:36:22 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:36:22 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:36:22 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG SQL:127 - select authors0_.book_id as book_id4_0_0_, authors0_.id as id1_0_0_, authors0_.id as id1_0_1_, authors0_.name as name2_0_1_, authors0_.surname as surname3_0_1_ from author authors0_ where authors0_.book_id=?
2020-05-22 10:36:22 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:36:22 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:36:22 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:36:22 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:36:22 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 10:36:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:36:22 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:36:22 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:36:22 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:36:22 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:36:22 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 10:36:22 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 10:36:22 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 10:36:22 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 10:36:22 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:36:22 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 10:36:22 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 10:36:22 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:36:22 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 10:36:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 10:36:22 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 10:36:22 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:36:22 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 10:36:22 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:36:22 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG SQL:127 - select genre0_.id as id1_2_0_, genre0_.name as name2_2_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:36:22 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:36:22 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:36:22 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG SQL:127 - select authors0_.book_id as book_id4_0_0_, authors0_.id as id1_0_0_, authors0_.id as id1_0_1_, authors0_.name as name2_0_1_, authors0_.surname as surname3_0_1_ from author authors0_ where authors0_.book_id=?
2020-05-22 10:36:22 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:36:22 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:36:22 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:36:22 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:36:22 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:36:22 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:36:22 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:35 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 10:56:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 10:56:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 10:56:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 10:56:35 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 10:56:35 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 10:56:35 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 10:56:35 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 10:56:35 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 10:56:35 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 10:56:35 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 10:56:35 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 10:56:35 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 10:56:35 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 10:56:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 10:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 10:56:35 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 10:56:35 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 10:56:35 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 10:56:35 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 10:56:35 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 10:56:35 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 10:56:36 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 10:56:36 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 10:56:36 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 10:56:36 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 10:56:36 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 10:56:36 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 10:56:36 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 10:56:36 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 10:56:36 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:56:36 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 10:56:36 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:56:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 10:56:36 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:56:36 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:56:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 10:56:36 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 10:56:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 10:56:36 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 10:56:36 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:56:36 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 10:56:36 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:56:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 10:56:36 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:56:36 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 10:56:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 10:56:36 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property name
2020-05-22 10:56:36 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 10:56:36 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 10:56:36 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 10:56:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 10:56:36 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property id
2020-05-22 10:56:36 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:56:36 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 10:56:36 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 10:56:36 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 10:56:36 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 10:56:36 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 10:56:36 DEBUG PropertyBinder:266 - Building property title
2020-05-22 10:56:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:56:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:56:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 10:56:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:56:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 10:56:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 10:56:36 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 10:56:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 10:56:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 10:56:36 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 10:56:36 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 10:56:36 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 10:56:36 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 10:56:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:56:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:56:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:56:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 10:56:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 10:56:36 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 10:56:36 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 10:56:36 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 10:56:36 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 10:56:36 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 10:56:36 DEBUG Settings:72 - Statistics: disabled
2020-05-22 10:56:36 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 10:56:36 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 10:56:36 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 10:56:36 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 10:56:36 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 10:56:36 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 10:56:36 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 10:56:36 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 10:56:36 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 10:56:36 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 10:56:36 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 10:56:36 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 10:56:36 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 10:56:36 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 10:56:36 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 10:56:36 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 10:56:36 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 10:56:36 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 10:56:36 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 10:56:36 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 10:56:36 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 10:56:36 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 10:56:36 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 10:56:36 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 10:56:36 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 10:56:36 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 10:56:36 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 10:56:36 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 10:56:36 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 10:56:36 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 10:56:36 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 10:56:36 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 10:56:36 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 10:56:36 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 10:56:36 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68217d41, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 10:56:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 10:56:36 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 10:56:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@470a659f]
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 10:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 10:56:36 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 10:56:36 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:56:36 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 10:56:36 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 10:56:36 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f324455]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:56:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554c4eaa]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 10:56:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:56:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:56:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0ed952]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:56:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d074b14]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 10:56:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:56:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:56:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 10:56:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559cedee]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a8d467e]
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3679d92e]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28237492]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 10:56:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abdec0e]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b5c4f17]
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ca8fcf3]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7efd0b]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 10:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 10:56:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 10:56:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:56:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3481ff98]
2020-05-22 10:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ddb3ae8]
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 10:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 10:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 10:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 10:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 10:56:36 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:56:36 DEBUG SQL:127 - drop table if exists author
2020-05-22 10:56:36 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@47768e74] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:56:36 DEBUG SQL:127 - drop table if exists book
2020-05-22 10:56:36 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 10:56:36 DEBUG SQL:127 - drop table if exists genre
2020-05-22 10:56:36 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:56:36 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@49a6f486] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 10:56:36 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 10:56:36 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 10:56:37 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 10:56:37 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 10:56:37 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 10:56:37 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 10:56:37 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 10:56:37 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 10:56:37 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 10:56:37 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:56:37 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 10:56:37 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 10:56:37 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 10:56:37 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7e83992
2020-05-22 10:56:37 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 27c10df3-fce3-4f98-a7fd-b74524ff9670 (<unnamed>)
2020-05-22 10:56:37 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 10:56:37 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 10:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:56:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:56:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:56:37 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:56:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:56:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:56:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:56:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:56:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:56:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:56:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:56:37 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 10:56:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:56:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:56:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:56:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:56:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:56:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:56:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:56:37 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:56:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:56:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:56:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:56:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:56:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:56:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:56:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:56:37 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 10:56:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 10:56:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:56:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 10:56:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:56:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 10:56:37 DEBUG TransactionImpl:81 - begin
2020-05-22 10:56:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 10:56:37 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 10:56:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 10:56:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 10:56:37 DEBUG TransactionImpl:98 - committing
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 10:56:37 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 10:56:37 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 10:56:37 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 10:56:37 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 10:56:37 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 10:56:37 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 10:56:37 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:56:37 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7ebe2e47
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:56:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:56:37 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:56:37 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:56:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:56:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:56:37 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 10:56:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 10:56:37 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:56:37 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 10:56:37 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 10:56:37 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:56:37 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 10:56:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:56:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:56:37 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 10:56:37 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:56:37 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:56:37 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:56:37 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:56:37 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:56:37 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:56:37 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:56:37 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:56:37 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 10:56:37 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 10:56:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 10:56:37 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 10:56:37 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 10:56:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:56:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 10:56:37 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 10:56:37 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 10:56:37 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 10:56:37 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 10:56:37 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 10:56:37 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 10:56:37 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 10:56:37 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 10:56:37 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 10:56:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 10:56:37 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 10:56:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 10:56:37 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 10:56:37 DEBUG Loader:384 - Result set row: 0
2020-05-22 10:56:37 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 10:56:37 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 10:56:37 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 10:56:37 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 10:56:37 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 10:56:37 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 10:56:37 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 10:56:37 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 10:56:37 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 10:56:37 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 10:56:37 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:21:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:21:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:21:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:21:39 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:21:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:21:39 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:21:39 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:21:40 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:21:40 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:21:40 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:21:40 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:21:40 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:21:40 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ff4357f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45fd9a4d
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@76884e4b
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39fcbef6
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39fcbef6
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67304a40
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67304a40
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53bd8fca
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@63a270c9
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@73a2e526
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@73a2e526
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@69653e16
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69653e16
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@550a1967
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@550a1967
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@f80945f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@f80945f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@77b14724
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@77b14724
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7b84fcf8
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7b84fcf8
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2cc44ad
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2cc44ad
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@33b1c5c5
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@33b1c5c5
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4535b6d5
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4535b6d5
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@66746f57
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@66746f57
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@3a3e78f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a3e78f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c4ed84
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4dc8caa7
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6c45ee6e
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c45ee6e
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@7ca33c24
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ca33c24
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b765a2c
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b765a2c
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2c5529ab
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5529ab
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2002348
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2002348
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24d09c1
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@732f29af
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@23fb172e
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@3300f4fd
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@6f152006
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@2f48b3d2
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f48b3d2
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4983159f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@3724af13
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3724af13
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4d722ac9
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d722ac9
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@616fe72b
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@60957c0f
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@60975100
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@c35172e
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c35172e
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ccb4b1b
2020-05-22 11:21:40 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4097cac
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:21:40 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:21:40 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:21:40 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:21:40 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:21:40 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:21:40 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:21:40 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:21:40 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:21:40 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:21:40 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:21:40 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:21:40 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:21:40 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:21:40 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:21:40 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14bae047] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ed9ae94]
2020-05-22 11:21:40 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:21:40 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:21:40 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:21:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:21:40 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:21:40 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:21:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:21:40 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:21:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:21:40 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:21:40 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:21:40 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:21:40 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:21:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:21:40 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:21:40 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:21:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:21:40 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:21:40 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:21:40 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:21:40 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:21:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:21:40 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:21:40 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:21:40 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:21:40 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:21:40 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:21:40 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:21:40 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:21:40 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:21:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:21:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:21:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:21:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:21:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:21:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:21:40 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:21:40 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:21:40 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:21:40 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:21:40 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:21:40 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 11:21:40 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:21:40 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:21:40 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:21:40 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:21:40 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:21:40 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:21:40 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:21:40 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:21:40 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:21:40 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:21:40 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:21:40 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:21:40 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:21:40 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:21:40 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:21:40 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:21:40 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:21:40 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:21:40 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:21:40 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:21:40 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:21:40 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:21:40 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:21:40 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:21:40 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:21:40 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:21:40 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:21:40 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:21:40 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:21:40 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:21:40 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:21:40 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:21:40 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:21:40 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:21:40 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:21:40 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:21:40 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:21:40 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:21:40 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:21:40 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:21:40 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:21:40 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:21:40 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:21:40 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:21:40 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:21:40 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:21:40 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62891fc8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:21:40 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:21:40 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:21:40 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14bae047] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ec65b5e]
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:21:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:21:40 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:21:40 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:21:40 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:21:40 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:21:40 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fb8c87]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:21:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:21:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:21:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:21:40 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39909d1a]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:21:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:21:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:21:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:21:40 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:21:40 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:21:40 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18371d89]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:21:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:21:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:21:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:21:40 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4832f03b]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:21:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:21:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:21:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:21:40 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:21:40 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:21:40 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:21:40 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8816cc]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@135a8c6f]
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a35bd]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e130bf]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:21:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:21:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:21:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:21:40 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66933239]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41ad373]
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6801b414]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:21:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d61a348]
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:21:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:21:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:21:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:21:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:21:41 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:21:41 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:21:41 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:21:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@732f6050]
2020-05-22 11:21:41 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fbc1bb]
2020-05-22 11:21:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:21:41 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:21:41 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:21:41 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:21:41 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:21:41 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:21:41 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:21:41 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f973a14] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:21:41 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:21:41 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:21:41 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:21:41 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:21:41 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3a4ab7f7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:21:41 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:21:41 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:21:41 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:21:41 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 11:21:41 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:21:41 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:21:41 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:21:41 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:21:41 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:21:41 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:21:41 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:21:41 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:21:41 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:21:41 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@497b560e
2020-05-22 11:21:41 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: b453dd1f-0e8a-48f0-97e0-90481f13fb36 (<unnamed>)
2020-05-22 11:21:41 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:21:41 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:21:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:21:41 DEBUG TransactionImpl:81 - begin
2020-05-22 11:21:41 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:21:41 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:21:41 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:21:41 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:21:41 DEBUG TransactionImpl:98 - committing
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:21:41 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:21:41 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:21:41 DEBUG TransactionImpl:81 - begin
2020-05-22 11:21:41 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:21:41 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:21:41 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:21:41 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:21:41 DEBUG TransactionImpl:98 - committing
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:21:41 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:21:41 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:21:41 DEBUG TransactionImpl:81 - begin
2020-05-22 11:21:41 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:21:41 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:21:41 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:21:41 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:21:41 DEBUG TransactionImpl:98 - committing
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:21:41 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:21:41 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:21:41 DEBUG TransactionImpl:81 - begin
2020-05-22 11:21:41 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:21:41 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:21:41 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:21:41 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:21:41 DEBUG TransactionImpl:98 - committing
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:21:41 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:21:41 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:21:41 DEBUG TransactionImpl:81 - begin
2020-05-22 11:21:41 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:21:41 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:21:41 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:21:41 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:21:41 DEBUG TransactionImpl:98 - committing
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:21:41 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:21:41 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:21:41 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:21:41 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:21:41 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:21:41 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:21:41 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:21:41 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3443e476
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:21:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:21:41 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:21:41 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:21:41 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:21:41 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:21:41 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:21:41 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:21:41 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:21:41 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:21:41 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:21:41 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:21:41 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5023bb8b}

2020-05-22 11:21:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:21:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:21:41 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:21:41 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:21:41 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:21:41 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:21:41 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:21:41 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:21:41 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:21:41 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:21:41 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:21:41 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:21:41 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:21:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:21:41 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:21:41 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:21:41 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:21:41 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:21:41 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:21:41 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:21:41 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:21:41 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:21:41 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:21:41 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:21:41 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:21:41 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:21:41 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:21:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:21:41 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:21:41 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:21:41 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:21:41 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:21:41 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:21:41 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:21:41 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:21:41 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:21:41 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:21:41 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:21:41 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:21:41 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:21:41 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:21:41 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:21:41 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:21 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:22:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:22:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:22:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:22:21 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:22:21 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:22:21 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:22:22 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:22:22 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:22:22 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:22:22 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:22:22 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:22:22 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:22:22 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ff4357f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45fd9a4d
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@76884e4b
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39fcbef6
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39fcbef6
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67304a40
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67304a40
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53bd8fca
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@63a270c9
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@73a2e526
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@73a2e526
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@69653e16
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69653e16
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@550a1967
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@550a1967
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@f80945f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@f80945f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@77b14724
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@77b14724
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7b84fcf8
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7b84fcf8
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2cc44ad
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2cc44ad
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@33b1c5c5
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@33b1c5c5
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4535b6d5
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4535b6d5
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@66746f57
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@66746f57
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@3a3e78f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a3e78f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c4ed84
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4dc8caa7
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6c45ee6e
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c45ee6e
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@7ca33c24
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ca33c24
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b765a2c
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b765a2c
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2c5529ab
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5529ab
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2002348
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2002348
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24d09c1
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@732f29af
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@23fb172e
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@3300f4fd
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@6f152006
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@2f48b3d2
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f48b3d2
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4983159f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@3724af13
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3724af13
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4d722ac9
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d722ac9
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@616fe72b
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@60957c0f
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@60975100
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@c35172e
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c35172e
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ccb4b1b
2020-05-22 11:22:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4097cac
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:22:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:22:22 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:22:22 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:22:22 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:22:22 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:22:22 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:22:22 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:22:22 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:22:22 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:22:22 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:22:22 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:22:22 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:22:22 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:22:22 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:22:22 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14bae047] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ed9ae94]
2020-05-22 11:22:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:22:22 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:22:22 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:22:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:22:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:22:22 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:22:22 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:22:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:22:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:22:22 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:22:22 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:22:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:22:22 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:22:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:22:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:22:22 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:22:22 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:22:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:22:22 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:22:22 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:22:22 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:22:22 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:22:22 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 11:22:22 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:22:22 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:22:22 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:22:22 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:22:22 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:22:22 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:22:22 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:22:22 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:22:22 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:22:22 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:22:22 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:22:22 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:22:22 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:22:22 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:22:22 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:22:22 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:22:22 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:22:22 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:22:22 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:22:22 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:22:22 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:22:22 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:22:22 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:22:22 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:22:22 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:22:22 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:22:22 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:22:22 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:22:22 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:22:22 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:22:22 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:22:22 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:22:22 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:22:22 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:22:22 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:22:22 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:22:22 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:22:22 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:22:22 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:22:22 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:22:22 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:22:22 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:22:22 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:22:22 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:22:22 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:22:22 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:22:22 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62891fc8, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:22:22 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:22:22 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:22:22 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@14bae047] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ec65b5e]
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:22:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:22:23 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:22:23 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:22:23 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:22:23 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:22:23 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42fb8c87]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:22:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39909d1a]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:22:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:23 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:23 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18371d89]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:22:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:22:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4832f03b]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:22:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:22:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:22:23 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:22:23 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:22:23 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8816cc]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@135a8c6f]
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a35bd]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e130bf]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:22:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:22:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66933239]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41ad373]
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6801b414]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d61a348]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:22:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:22:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:22:23 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:22:23 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@732f6050]
2020-05-22 11:22:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fbc1bb]
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:22:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:22:23 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:22:23 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:22:23 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f973a14] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:22:23 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:22:23 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:22:23 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:22:23 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:22:23 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3a4ab7f7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:22:23 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:22:23 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:22:23 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:22:23 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 11:22:23 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:22:23 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:22:23 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:22:23 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:22:23 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:22:23 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:22:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:22:23 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:22:23 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:22:23 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@497b560e
2020-05-22 11:22:23 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: b8856665-c9fe-4bde-bc9e-d1145ec7480b (<unnamed>)
2020-05-22 11:22:23 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:22:23 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:22:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:23 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:22:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:22:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:22:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:23 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:22:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:22:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:22:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:23 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:22:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:22:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:22:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:23 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:22:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:22:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:22:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:23 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:22:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:22:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:23 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:22:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:22:23 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:22:23 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:22:23 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:23 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:22:23 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:22:23 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3443e476
2020-05-22 11:22:23 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:22:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:22:23 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:22:23 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:22:23 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:22:23 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:22:23 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:22:23 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:22:23 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:22:23 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:22:23 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:22:23 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:22:24 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:22:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:22:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5023bb8b}

2020-05-22 11:22:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:22:24 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:22:24 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:22:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:22:24 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:22:24 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:22:24 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:22:24 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:24 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:22:24 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:22:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:22:24 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:22:24 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:22:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:22:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:22:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:22:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:22:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:22:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:22:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM book JOIN book_author ON id = book_id JOIN author ON authors_id = author.id WHERE author = :author
2020-05-22 11:22:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:22:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     +-[RANGE] Node: 'RANGE'
    |     |  \-[IDENT] Node: 'book'
    |     +-[JOIN] Node: 'JOIN'
    |     |  +-[IDENT] Node: 'book_author'
    |     |  \-[WITH] Node: 'with'
    |     |     \-[EQ] Node: '='
    |     |        +-[IDENT] Node: 'id'
    |     |        \-[IDENT] Node: 'book_id'
    |     \-[JOIN] Node: 'JOIN'
    |        +-[IDENT] Node: 'author'
    |        \-[WITH] Node: 'with'
    |           \-[EQ] Node: '='
    |              +-[IDENT] Node: 'authors_id'
    |              \-[DOT] Node: '.'
    |                 +-[IDENT] Node: 'author'
    |                 \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'author'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'author'

2020-05-22 11:22:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:22:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:57 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:22:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:22:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:22:57 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:22:57 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:22:57 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:22:57 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:22:58 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:22:58 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:22:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:22:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:22:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:22:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:22:58 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a448449
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ff4357f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45fd9a4d
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@76884e4b
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4879dfad
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4df5bcb4
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2654635
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@736caf7a
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@495fac5f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@495b0487
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4b6690c0
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39fcbef6
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39fcbef6
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67304a40
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67304a40
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53bd8fca
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@63a270c9
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@73a2e526
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@73a2e526
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@69653e16
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@69653e16
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@550a1967
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@550a1967
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@f80945f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@f80945f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@77b14724
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@77b14724
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7b84fcf8
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7b84fcf8
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2cc44ad
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2cc44ad
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@33b1c5c5
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@33b1c5c5
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4535b6d5
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4535b6d5
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@66746f57
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@66746f57
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@3a3e78f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a3e78f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56113384
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c4ed84
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31d0e481
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4dc8caa7
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@6c45ee6e
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c45ee6e
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@7ca33c24
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7ca33c24
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b765a2c
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b765a2c
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2c5529ab
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c5529ab
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2002348
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2002348
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24d09c1
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@2dd80673
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b45dcb8
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@732f29af
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@23fb172e
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@3e821657
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@260e86a1
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@3300f4fd
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@6f152006
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@2f48b3d2
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f48b3d2
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4983159f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@3724af13
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3724af13
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4d722ac9
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4d722ac9
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@616fe72b
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@60957c0f
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@60975100
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@c35172e
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c35172e
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ccb4b1b
2020-05-22 11:22:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4097cac
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:22:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:22:58 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:22:58 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:22:58 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:22:58 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:22:58 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:22:58 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:22:58 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:22:58 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:22:58 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:22:58 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:22:58 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:22:58 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:22:58 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:22:58 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6999cd39] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@14bae047]
2020-05-22 11:22:58 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:22:58 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:22:58 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:22:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:22:58 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:22:58 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:22:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:22:58 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:22:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:22:58 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:22:58 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:22:58 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:22:58 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:22:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:22:58 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:22:58 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:22:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:22:58 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:22:58 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:22:58 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:22:58 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:22:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:22:58 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:22:58 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:22:58 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:22:58 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:22:58 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:22:58 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:22:58 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:22:58 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:22:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:22:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:22:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:22:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:22:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:22:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:22:58 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:22:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:22:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:22:58 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:22:58 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:22:58 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 11:22:58 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:22:58 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:22:58 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:22:58 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:22:58 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:22:58 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:22:58 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:22:58 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:22:58 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:22:58 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:22:58 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:22:58 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:22:58 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:22:58 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:22:58 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:22:58 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:22:58 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:22:58 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:22:58 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:22:58 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:22:58 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:22:58 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:22:58 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:22:58 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:22:58 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:22:58 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:22:58 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:22:58 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:22:58 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:22:58 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:22:58 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:22:58 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:22:58 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:22:58 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:22:58 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:22:58 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:22:58 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:22:58 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:22:58 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:22:58 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:22:58 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:22:58 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:22:58 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:22:58 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:22:58 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:22:59 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:22:59 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5ae95707, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:22:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:22:59 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:22:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6999cd39] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6fca5907]
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:22:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:22:59 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:22:59 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:22:59 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:22:59 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:22:59 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3206174f]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:22:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cdbaa50]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:22:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559cedee]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:22:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:22:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f3faa70]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:22:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:22:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:22:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:22:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:22:59 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af3874e]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ed043d3]
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee25d80]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b5a1d85]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:22:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:22:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69f0b0f4]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f7efd0b]
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41ad373]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f327096]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:22:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:22:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:22:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:22:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7d70638]
2020-05-22 11:22:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@732f6050]
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:22:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:22:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:22:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:22:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:22:59 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:22:59 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:22:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5fef2aac] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:22:59 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:22:59 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:22:59 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:22:59 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:22:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@ebe067d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:22:59 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:22:59 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:22:59 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:22:59 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 11:22:59 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:22:59 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:22:59 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:22:59 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:22:59 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:22:59 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:22:59 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:22:59 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:22:59 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:22:59 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@56476c16
2020-05-22 11:22:59 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 9fecacdb-8bed-4210-bf25-dc889040356d (<unnamed>)
2020-05-22 11:22:59 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:22:59 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:22:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:59 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:59 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:22:59 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:22:59 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:59 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:22:59 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:59 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:22:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:59 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:59 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:22:59 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:22:59 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:59 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:22:59 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:59 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:22:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:59 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:59 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:22:59 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:22:59 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:59 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:22:59 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:59 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:22:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:59 DEBUG TransactionImpl:81 - begin
2020-05-22 11:22:59 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:22:59 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:22:59 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:22:59 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:22:59 DEBUG TransactionImpl:98 - committing
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:22:59 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:22:59 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:22:59 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:22:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:59 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:22:59 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:22:59 DEBUG TransactionImpl:81 - begin
2020-05-22 11:23:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:23:00 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:23:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:23:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:23:00 DEBUG TransactionImpl:98 - committing
2020-05-22 11:23:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:23:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:23:00 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:23:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:23:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:23:00 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:23:00 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:23:00 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:23:00 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:23:00 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:23:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:23:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:23:00 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:23:00 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:23:00 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2693c618
2020-05-22 11:23:00 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:23:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:23:00 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:23:00 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:23:00 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:23:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:23:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:23:00 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@5023bb8b
2020-05-22 11:23:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:23:00 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:23:00 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:23:00 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:23:00 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:23:00 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:23:00 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5023bb8b}

2020-05-22 11:23:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:23:00 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:23:00 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:23:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:23:00 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:23:00 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:23:00 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:23:00 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:23:00 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:23:00 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:23:00 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:23:00 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:23:00 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:23:00 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:23:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:23:00 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:23:00 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:23:00 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:23:00 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:23:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:23:00 DEBUG QueryTranslatorImpl:288 - parse() - HQL: FROM dev.hibernate.model.Book JOIN book_author ON id = book_id JOIN author ON authors_id = author.id WHERE author = :author
2020-05-22 11:23:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:23:00 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     +-[RANGE] Node: 'RANGE'
    |     |  \-[DOT] Node: '.'
    |     |     +-[DOT] Node: '.'
    |     |     |  +-[DOT] Node: '.'
    |     |     |  |  +-[IDENT] Node: 'dev'
    |     |     |  |  \-[IDENT] Node: 'hibernate'
    |     |     |  \-[IDENT] Node: 'model'
    |     |     \-[IDENT] Node: 'Book'
    |     +-[JOIN] Node: 'JOIN'
    |     |  +-[IDENT] Node: 'book_author'
    |     |  \-[WITH] Node: 'with'
    |     |     \-[EQ] Node: '='
    |     |        +-[IDENT] Node: 'id'
    |     |        \-[IDENT] Node: 'book_id'
    |     \-[JOIN] Node: 'JOIN'
    |        +-[IDENT] Node: 'author'
    |        \-[WITH] Node: 'with'
    |           \-[EQ] Node: '='
    |              +-[IDENT] Node: 'authors_id'
    |              \-[DOT] Node: '.'
    |                 +-[IDENT] Node: 'author'
    |                 \-[IDENT] Node: 'id'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'author'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'author'

2020-05-22 11:23:00 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:23:00 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (<no alias>) -> book0_
2020-05-22 11:23:00 ERROR ErrorTracker:62 -  Path expected for join!
2020-05-22 11:23:00 ERROR ErrorTracker:57 -  Path expected for join!
 Path expected for join!
	at org.hibernate.hql.internal.ast.HqlSqlWalker.createFromJoinElement(HqlSqlWalker.java:399)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.joinElement(HqlSqlBaseWalker.java:3920)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3706)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3584)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:720)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:576)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:313)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:261)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:272)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:155)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:600)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:709)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:109)
	at dev.hibernate.dao.impl.BookDaoImpl.getByAuthor(BookDaoImpl.java:67)
	at dev.hibernate.service.impl.BookServiceImpl.getByAuthor(BookServiceImpl.java:31)
	at dev.hibernate.Main.main(Main.java:47)
2020-05-22 11:23:00 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:23:00 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} book book0_ ) ( WHERE ( = author ? ) ) )
2020-05-22 11:23:00 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2020-05-22 11:23:00 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-SelectExpressionImpl
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-IdentNode
          | persister: null
          | referencedTables: null
          | originalText: author
          \-ParameterNode

2020-05-22 11:23:00 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:23:00 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:23:00 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'book0_.id as id1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[IDENT] IdentNode: 'author' {originalText=author}
          \-[NAMED_PARAM] ParameterNode: '?' {name=author, expectedType=null}

2020-05-22 11:23:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:30:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:30:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:30:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:30:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:30:14 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:30:14 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:30:14 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:30:15 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:30:15 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:30:15 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:30:15 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:30:15 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:30:15 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:30:15 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2445445a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@2445445a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2445445a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@32f232a5
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2dc995f4
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@530712d
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@50468873
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@50468873
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@50468873
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@35229f85
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@35229f85
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35229f85
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@28ec166e
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@28ec166e
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@28ec166e
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@2826f61
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@2826f61
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2826f61
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@15dcfae7
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@15dcfae7
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@15dcfae7
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@63f8276e
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@63f8276e
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@63f8276e
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@79d94571
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@79d94571
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@79d94571
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@93cf163
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@93cf163
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@71454b9d
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@71454b9d
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@3d2ee678
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3d2ee678
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@67304a40
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1c32386d
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@53bd8fca
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53bd8fca
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@1199fe66
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1199fe66
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@69653e16
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@69653e16
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@604c5de8
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@604c5de8
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@584f54e6
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@584f54e6
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5ef6ae06
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5ef6ae06
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@604f2bd2
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@604f2bd2
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@366ac49b
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@366ac49b
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@663411de
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@663411de
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@4535b6d5
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4535b6d5
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@40844aab
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@40844aab
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@54dcfa5a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@54dcfa5a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@54dcfa5a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@301ec38b
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5669c5fb
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5669c5fb
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5669c5fb
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5a9d6f02
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3243b914
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3243b914
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@3b00856b
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b00856b
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1338fb5
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1338fb5
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@41dd05a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@41dd05a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18920cc
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18920cc
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2c5529ab
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@5911e990
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5911e990
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@5911e990
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2d1dee39
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2d1dee39
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2d1dee39
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@acdb094
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@4b45dcb8
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@732f29af
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@732f29af
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@732f29af
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25a6944c
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25a6944c
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25a6944c
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@3e821657
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@4fce136b
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@5b068087
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b068087
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7cbc3762
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@23bff419
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@23bff419
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@26bab2f1
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26bab2f1
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@180da663
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@37052337
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@7e5d9a50
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@8c11eee
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@8c11eee
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c08c46a
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4cf8b2dc
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@708400f6
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5829e4f4
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4218500f
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4bff64c2
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b2c4efb
2020-05-22 11:30:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c35172e
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:30:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:30:15 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:30:15 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:30:15 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:30:15 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:30:15 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:30:15 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:30:18 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:30:18 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:30:18 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:30:18 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:30:18 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:30:18 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:30:18 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:30:18 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@796d3c9f]
2020-05-22 11:30:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:30:20 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:30:20 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:30:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:30:20 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:30:20 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:30:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:30:20 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:30:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:30:20 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:30:20 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:30:20 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:30:20 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:30:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:30:20 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:30:20 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:30:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:30:20 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:30:20 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:30:20 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:30:20 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:30:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:30:20 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:30:20 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:30:20 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:30:20 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:30:20 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:30:20 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:30:20 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:30:20 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:30:20 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:30:20 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:30:20 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:30:20 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:30:20 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:30:20 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:30:20 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:30:20 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:30:20 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:30:20 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:30:20 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:30:20 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:30:20 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:30:20 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:30:20 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:30:20 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:30:20 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:30:20 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:30:20 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:30:20 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:30:20 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:30:20 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:30:20 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:30:20 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:30:20 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:30:20 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:30:20 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:30:20 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:30:20 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:30:20 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:30:20 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:30:20 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:30:20 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:30:20 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:30:20 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:30:20 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:30:20 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:30:20 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:30:20 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:30:20 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:30:20 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:30:20 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:30:20 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:30:20 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:30:20 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:30:20 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:30:20 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:30:20 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:30:20 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:30:20 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:30:20 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:30:20 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:30:20 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:30:20 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:30:20 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:30:20 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:30:20 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:30:20 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:30:20 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@36fcf6c0, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:30:20 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:30:20 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:30:20 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5ec46cdd]
2020-05-22 11:30:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:30:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:30:21 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:30:21 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:30:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:30:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:30:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:30:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:30:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:30:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:30:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:30:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:30:22 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:30:22 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:30:22 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:30:22 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:30:22 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b66322e]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:30:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:30:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:30:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:30:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b81616b]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:30:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:30:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:30:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:30:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:30:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:30:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:30:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:30:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:30:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:30:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d6d273]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:30:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:30:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:30:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:30:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:30:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:30:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:30:22 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a4401]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@204abeff]
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43bf5397]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36aa52d2]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:30:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:30:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:30:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:30:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73ae0257]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5762658b]
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2629d5dc]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa3bfc]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:30:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:30:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:30:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:30:22 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:30:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:30:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5740ff5e]
2020-05-22 11:30:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a901445]
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:30:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:30:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:30:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:30:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:30:22 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:30:22 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:30:22 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@350ec690] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:30:22 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:30:22 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:30:22 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:30:22 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:30:22 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@668625f5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:30:22 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:30:22 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:30:22 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:30:23 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:30:23 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:30:23 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:30:23 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:30:23 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:30:23 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:30:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:30:23 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:30:23 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:30:23 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b477141
2020-05-22 11:30:23 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 03f091fb-db4b-45fe-9233-b6d9e3e09a2c (<unnamed>)
2020-05-22 11:30:23 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:30:23 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:30:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:30:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:30:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:30:23 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:30:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:30:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:30:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:30:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:30:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:30:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:30:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:30:23 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:30:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:30:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:30:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:30:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:30:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:30:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:30:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:30:23 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:30:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:30:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:30:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:30:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:30:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:30:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:30:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:30:23 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:30:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:30:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:30:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:30:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:30:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:30:23 DEBUG TransactionImpl:81 - begin
2020-05-22 11:30:23 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:30:23 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:30:23 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:30:23 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:30:23 DEBUG TransactionImpl:98 - committing
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:30:23 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:30:23 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:30:23 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:30:23 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:30:23 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:23 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:30:23 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:23 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:30:23 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:30:23 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1dcedc93
2020-05-22 11:30:23 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:30:23 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:30:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:30:24 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:30:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:30:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:30:24 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@3d2ee678
2020-05-22 11:30:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:30:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:30:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:30:24 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:30:24 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:30:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3d2ee678}

2020-05-22 11:30:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:30:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:30:24 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:30:24 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:30:24 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:30:24 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:30:24 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:30:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:24 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:30:24 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:30:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:30:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:30:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:30:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:30:24 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:30:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:30:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:30:24 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:30:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:30:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:30:24 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:30:24 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:30:24 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:30:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:30:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:30:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:30:24 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:30:24 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:30:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:30:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:30:24 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:30:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:30:24 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:30:24 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:30:24 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:30:24 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:30:24 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:30:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:24 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:30:24 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:30:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:30:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:30:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:30:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:30:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:30:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:18 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:34:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:34:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:34:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:34:18 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:34:18 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:34:18 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:34:18 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:34:18 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:34:18 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:34:18 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:34:18 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:34:18 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:34:19 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:34:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:34:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:34:19 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:34:19 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:34:19 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:34:19 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:34:19 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:34:19 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:34:19 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:34:19 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:34:19 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:34:19 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:34:19 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:34:19 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:34:19 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:34:19 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 11:34:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:34:19 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:34:19 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:34:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:34:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:34:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:34:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:34:19 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:34:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:34:19 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:34:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:34:19 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:34:19 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:34:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:34:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:34:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:34:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:34:19 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:34:19 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:34:19 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:34:19 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:34:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:34:19 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:34:19 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:34:19 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:34:19 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:34:19 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:34:19 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:34:19 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:34:19 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:34:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:34:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:34:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:34:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:34:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:34:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:34:19 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:34:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:34:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:34:19 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:34:19 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:34:19 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:34:19 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:34:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:34:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:34:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:34:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:34:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:34:19 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:34:19 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:34:19 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:34:19 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:34:19 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:34:19 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:34:19 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:34:19 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:34:19 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:34:19 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:34:19 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:34:19 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:34:19 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:34:19 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:34:19 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:34:19 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:34:19 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:34:19 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:34:19 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:34:19 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:34:19 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:34:19 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:34:19 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:34:19 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:34:19 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:34:19 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:34:19 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:34:19 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:34:19 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:34:19 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:34:19 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:34:19 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:34:19 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:34:19 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:34:19 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:34:19 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:34:19 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:34:19 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:34:19 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:34:19 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:34:19 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7cb8437d, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:34:19 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:34:19 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:34:19 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4016ccc1]
2020-05-22 11:34:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:34:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:34:19 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:34:19 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:34:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:34:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:34:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:34:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:34:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:34:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:34:20 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:34:20 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:34:20 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:34:20 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:34:20 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:34:20 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:34:20 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106d77da]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:34:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:34:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:34:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:34:20 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c281ed]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:34:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:34:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:34:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:34:20 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:34:20 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:34:20 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a4401]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:34:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:34:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:34:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:34:20 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e64760]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:34:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:34:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:34:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:34:20 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:34:20 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:34:20 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:34:20 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43982337]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4ba1ae]
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7426a448]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f798482]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:34:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:34:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:34:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:34:20 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2596d7f4]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6aa3bfc]
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4599c0]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abdec0e]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:34:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:34:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:34:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:34:20 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:34:20 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:34:20 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7be1ce6a]
2020-05-22 11:34:20 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3119cf6f]
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:34:20 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:34:20 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:34:20 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:34:20 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:34:20 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:34:20 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:34:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@34a2d6e0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:34:20 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:34:20 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:34:20 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:34:20 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:34:20 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@30893e08] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:34:20 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:34:20 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:34:20 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:34:20 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:34:20 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:34:20 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:34:20 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:34:20 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:34:20 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:34:20 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:34:20 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:34:20 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:34:20 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d0cac1f
2020-05-22 11:34:20 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 0b43367f-a92c-4f32-b5cd-2905ecc1c943 (<unnamed>)
2020-05-22 11:34:20 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:34:20 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:34:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:34:20 DEBUG TransactionImpl:81 - begin
2020-05-22 11:34:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:34:20 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:34:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:34:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:34:20 DEBUG TransactionImpl:98 - committing
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:34:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:34:20 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:34:20 DEBUG TransactionImpl:81 - begin
2020-05-22 11:34:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:34:20 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:34:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:34:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:34:20 DEBUG TransactionImpl:98 - committing
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:34:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:34:20 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:34:20 DEBUG TransactionImpl:81 - begin
2020-05-22 11:34:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:34:20 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:34:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:34:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:34:20 DEBUG TransactionImpl:98 - committing
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:34:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:34:20 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:34:20 DEBUG TransactionImpl:81 - begin
2020-05-22 11:34:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:34:20 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:34:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:34:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:34:20 DEBUG TransactionImpl:98 - committing
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:34:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:34:20 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:34:20 DEBUG TransactionImpl:81 - begin
2020-05-22 11:34:20 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:34:20 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:34:20 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:34:20 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:34:20 DEBUG TransactionImpl:98 - committing
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:34:20 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:34:20 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:34:20 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:34:20 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:34:20 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:34:20 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:34:20 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:34:20 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:34:20 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:34:20 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@31f295b6
2020-05-22 11:34:20 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:34:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:34:20 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:34:20 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:34:20 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:34:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:34:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:34:20 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:34:20 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:34:20 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:34:20 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:34:20 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:34:20 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:34:20 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:34:20 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:34:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:34:20 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:34:20 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:34:20 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:34:20 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:34:20 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:34:20 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:34:20 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:34:20 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:34:20 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:34:20 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:34:20 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:34:20 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:34:20 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:34:20 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:34:20 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:34:20 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:34:20 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:34:20 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:34:20 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:15 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:36:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:36:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:36:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:36:16 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:36:16 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:36:16 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:36:16 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:36:16 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:36:16 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:36:16 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:36:16 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:36:16 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:36:16 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:36:16 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:36:16 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:36:16 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:36:16 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:36:16 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:36:16 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:36:17 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:36:17 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:36:17 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:36:17 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:36:17 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:36:17 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:36:17 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:36:17 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5eccd3b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d6f197e]
2020-05-22 11:36:17 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:36:17 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:36:17 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:36:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:36:17 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:36:17 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:36:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:36:17 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:36:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:36:17 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:36:17 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:36:17 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:36:17 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:36:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:36:17 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:36:17 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:36:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:36:17 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:36:17 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:36:17 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:36:17 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:36:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:36:17 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:36:17 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:36:17 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:36:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:36:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:36:17 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:36:17 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:36:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:36:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:36:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:36:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:36:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:36:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:36:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:36:17 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:36:17 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:36:17 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:36:17 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:36:17 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:36:17 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:36:17 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:36:17 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:36:17 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:36:17 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:36:17 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:36:17 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:36:17 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:36:17 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:36:17 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:36:17 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:36:17 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:36:17 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:36:17 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:36:17 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:36:17 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:36:17 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:36:17 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:36:17 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:36:17 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:36:17 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:36:17 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:36:17 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:36:17 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:36:17 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:36:17 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:36:17 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:36:17 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:36:17 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:36:17 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:36:17 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:36:17 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:36:17 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:36:17 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:36:17 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:36:17 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:36:17 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:36:17 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:36:17 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:36:17 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:36:17 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:36:17 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:36:17 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:36:17 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:36:17 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:36:17 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:36:17 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@62a4417, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:36:17 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:36:17 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:36:17 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5eccd3b9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@46cb98a3]
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:36:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:36:17 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:36:17 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:36:17 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:36:17 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:36:17 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f9c5048]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:36:17 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@244418a]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:36:17 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:17 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:17 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22c75c01]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:36:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:36:17 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e5fd2b1]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:36:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:36:17 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:36:17 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:36:17 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:36:17 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b275811]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1391af3b]
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@516462cc]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@332bcab0]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:36:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:36:17 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42a0501e]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e4599c0]
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dffda8b]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f4f300]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:36:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:36:17 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:36:17 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:36:17 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3119cf6f]
2020-05-22 11:36:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc9da2d]
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:36:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:36:17 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:36:17 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:36:17 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2525a5b8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:36:17 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:36:17 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:36:17 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:36:17 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:36:17 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2e86807a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:36:17 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:36:17 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:36:17 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:36:17 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:36:17 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:36:17 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:36:17 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:36:17 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:36:17 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:36:17 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:36:17 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:36:17 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:36:18 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3e8b3b79
2020-05-22 11:36:18 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: e72eddd8-f917-47e6-8698-41ae7474ac48 (<unnamed>)
2020-05-22 11:36:18 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:36:18 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:36:18 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:18 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:18 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:18 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:36:18 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:36:18 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:18 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:36:18 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:18 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:18 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:18 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:18 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:36:18 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:36:18 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:18 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:36:18 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:18 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:18 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:18 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:18 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:36:18 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:36:18 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:18 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:36:18 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:18 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:18 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:18 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:18 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:36:18 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:36:18 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:18 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:36:18 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:18 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:18 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:18 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:18 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:36:18 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:36:18 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:18 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:18 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:18 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:36:18 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:18 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:36:18 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:18 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:36:18 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:18 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:36:18 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:36:18 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7a687d8d
2020-05-22 11:36:18 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:36:18 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:18 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:36:18 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:36:18 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:36:18 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:36:18 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:36:18 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:36:18 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:36:18 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:36:18 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:36:18 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:36:18 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:36:18 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:36:18 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:36:18 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:18 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:36:18 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:36:18 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:18 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:36:18 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:36:18 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:18 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:18 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:36:18 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:36:18 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:18 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:36:18 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:18 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:18 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:36:18 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:36:18 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:18 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:36:18 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:36:18 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:26 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:36:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:36:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:36:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:36:26 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:36:26 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:36:27 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:36:27 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:36:27 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:36:27 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:36:27 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:36:27 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:36:27 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:36:27 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:36:27 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:36:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:36:27 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:36:27 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:36:27 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:36:27 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:36:27 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:36:27 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:36:27 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:36:27 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:36:27 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:36:27 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:36:27 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:36:27 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:36:27 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:36:27 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 11:36:27 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:36:27 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:36:27 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:36:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:36:27 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:36:27 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:36:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:36:27 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:36:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:36:27 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:36:27 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:36:27 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:36:27 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:36:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:36:27 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:36:27 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:36:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:36:27 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:36:27 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:36:27 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:36:27 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:36:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:36:27 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:36:27 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:36:27 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:36:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:36:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:36:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:36:27 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:36:27 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:36:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:36:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:36:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:36:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:36:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:36:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:36:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:36:27 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:36:27 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:36:27 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:36:27 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:36:27 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:36:27 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:36:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:36:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:36:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:36:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:36:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:36:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:36:28 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:36:28 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:36:28 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:36:28 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:36:28 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:36:28 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:36:28 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:36:28 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:36:28 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:36:28 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:36:28 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:36:28 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:36:28 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:36:28 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:36:28 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:36:28 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:36:28 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:36:28 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:36:28 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:36:28 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:36:28 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:36:28 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:36:28 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:36:28 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:36:28 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:36:28 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:36:28 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:36:28 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:36:28 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:36:28 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:36:28 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:36:28 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:36:28 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:36:28 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:36:28 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:36:28 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:36:28 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:36:28 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:36:28 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:36:28 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7cb8437d, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:36:28 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:36:28 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:36:28 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4016ccc1]
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:36:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:36:28 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:36:28 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:36:28 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:36:28 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:36:28 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106d77da]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:36:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c281ed]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:36:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a4401]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:36:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:36:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e64760]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:36:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:36:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:36:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:36:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:36:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43982337]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4ba1ae]
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7426a448]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f798482]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:36:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:36:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2596d7f4]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6aa3bfc]
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4599c0]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abdec0e]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:36:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:36:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:36:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:36:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7be1ce6a]
2020-05-22 11:36:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3119cf6f]
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:36:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:36:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:36:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:36:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:36:28 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:36:28 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:36:28 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@34a2d6e0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:36:28 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:36:28 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:36:28 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:36:28 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:36:28 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@30893e08] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:36:28 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:36:28 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:36:28 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:36:28 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:36:28 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:36:28 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:36:28 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:36:28 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:36:28 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:36:28 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:36:28 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:36:28 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:36:28 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d0cac1f
2020-05-22 11:36:28 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: e0b40895-56b4-4cfe-9316-eaf3f6e9775b (<unnamed>)
2020-05-22 11:36:28 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:36:28 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:36:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:28 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:36:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:36:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:36:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:28 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:36:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:36:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:36:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:28 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:36:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:36:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:36:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:28 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:36:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:36:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:36:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:36:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:36:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:36:28 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:36:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:36:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:36:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:36:28 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:36:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:36:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:36:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:36:28 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:28 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:36:28 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:28 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:36:29 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:36:29 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@31f295b6
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:36:29 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:36:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:36:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:36:29 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:36:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:36:29 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:36:29 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:36:29 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:36:29 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:36:29 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:29 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:36:29 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:36:29 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:36:29 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:36:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:29 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:36:29 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:36:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:36:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:36:29 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:36:29 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:36:29 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:36:29 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:36:29 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:36:29 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:36:29 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:36:29 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:36:29 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:36:29 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:36:29 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:36:29 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:29 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:36:29 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:36:29 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:36:29 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:36:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:36:29 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:36:29 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:36:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:36:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:36:29 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:36:29 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:36:29 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:36:29 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:36:29 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:36:29 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:36:29 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:36:29 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:36:29 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:36:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:36:29 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:36:29 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:36:29 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:36:29 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:36:29 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:36:29 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:36:29 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:36:29 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:36:29 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:36:29 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:36:29 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:30 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:37:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:37:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:37:30 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:37:30 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:37:30 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:37:30 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:37:30 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:37:31 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:37:31 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:37:31 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:37:31 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:37:31 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:37:31 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:37:31 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:37:31 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:37:31 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:37:31 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:37:31 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:37:31 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:37:31 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:37:31 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:37:31 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:37:31 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:37:31 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:37:31 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:37:31 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:37:31 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:37:31 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:37:31 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 11:37:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:37:31 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:37:31 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:37:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:37:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:37:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:37:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:37:31 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:37:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:37:31 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:37:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:37:31 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:37:31 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:37:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:37:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:37:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:37:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:37:31 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:37:31 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:37:31 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:37:31 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:37:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:37:31 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:37:31 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:37:31 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:37:31 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:37:31 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:37:31 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:37:31 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:37:31 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:37:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:37:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:37:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:37:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:37:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:37:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:37:31 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:37:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:37:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:37:31 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:37:31 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:37:31 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:37:31 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:37:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:37:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:37:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:37:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:37:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:37:31 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:37:31 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:37:31 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:37:31 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:37:31 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:37:31 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:37:31 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:37:31 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:37:31 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:37:31 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:37:31 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:37:31 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:37:31 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:37:31 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:37:31 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:37:31 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:37:31 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:37:31 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:37:31 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:37:31 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:37:31 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:37:31 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:37:31 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:37:31 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:37:31 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:37:31 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:37:31 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:37:31 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:37:31 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:37:31 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:37:31 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:37:31 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:37:31 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:37:31 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:37:31 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:37:31 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:37:31 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:37:31 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:37:31 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:37:31 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:37:31 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7cb8437d, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:37:31 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:37:31 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:37:31 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4016ccc1]
2020-05-22 11:37:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:37:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:37:31 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:37:31 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:37:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:37:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:37:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:37:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:37:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:37:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:37:32 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:37:32 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:37:32 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:37:32 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:37:32 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:37:32 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:37:32 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106d77da]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:37:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:37:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:37:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:37:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c281ed]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:37:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:37:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:37:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:37:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:37:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:37:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a4401]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:37:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:37:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:37:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:37:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e64760]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:37:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:37:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:37:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:37:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:37:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:37:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:37:32 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43982337]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4ba1ae]
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7426a448]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f798482]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:37:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:37:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:37:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:37:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2596d7f4]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6aa3bfc]
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4599c0]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abdec0e]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:37:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:37:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:37:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:37:32 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:37:32 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:37:32 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7be1ce6a]
2020-05-22 11:37:32 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3119cf6f]
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:37:32 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:37:32 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:37:32 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:37:32 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:37:32 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:37:32 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:37:32 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@34a2d6e0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:37:32 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:37:32 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:37:32 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:37:32 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:37:32 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@30893e08] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:37:32 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:37:32 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:37:32 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:37:32 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:37:32 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:37:32 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:37:32 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:37:32 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:37:32 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:37:32 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:37:32 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:37:32 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:37:32 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d0cac1f
2020-05-22 11:37:32 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 414f73c8-0119-4b58-9a78-b771087f78d1 (<unnamed>)
2020-05-22 11:37:32 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:37:32 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:37:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:37:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:37:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:37:32 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:37:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:37:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:37:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:37:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:37:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:37:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:37:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:37:32 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:37:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:37:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:37:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:37:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:37:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:37:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:37:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:37:32 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:37:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:37:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:37:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:37:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:37:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:37:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:37:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:37:32 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:37:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:37:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:37:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:37:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:37:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:37:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:37:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:37:32 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:37:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:37:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:37:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:37:32 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:37:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:37:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:37:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:37:32 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:37:32 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:37:32 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:32 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:37:32 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:37:32 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@31f295b6
2020-05-22 11:37:32 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:37:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:37:32 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:37:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:37:32 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:37:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:37:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:37:32 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:37:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:37:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:37:32 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:37:32 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:37:32 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:37:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:37:32 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:37:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:37:32 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:37:32 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:37:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:37:32 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:37:32 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:37:32 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:37:32 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:37:32 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:37:32 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:37:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:37:32 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:37:32 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:37:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:37:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:37:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:37:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:37:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:37:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:37:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:33 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.authors=:param0
2020-05-22 11:37:33 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.authors=:param0
2020-05-22 11:37:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:37:33 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'authors'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:37:33 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:37:33 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:37:33 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:37:33 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:37:33 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:37:33 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:37:33 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> author2_
2020-05-22 11:37:33 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=author2_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:37:33 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author author2_
2020-05-22 11:37:33 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.authors -> .
2020-05-22 11:37:33 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:37:33 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ book_author author2_ ) ( where ( = ( . book0_.id authors ) ? ) ) )
2020-05-22 11:37:33 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Author)
          | referencedTables: [book]
          | path: generatedAlias0.authors
          | originalPropertyName: authors
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: authors
          \-ParameterNode

2020-05-22 11:37:33 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:37:33 DEBUG JoinProcessor:279 - Using FROM fragment [book_author authors1_, author author2_]
2020-05-22 11:37:33 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [book0_.id=authors1_.Book_id and authors1_.authors_id=author2_.id]
2020-05-22 11:37:33 DEBUG SyntheticAndFactory:104 - Using processed WHERE-fragment [book0_.id=authors1_.Book_id and authors1_.authors_id=author2_.id]
2020-05-22 11:37:33 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:37:33 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author2_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'book_author authors1_, author author2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=author2_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'book0_.id=authors1_.Book_id and authors1_.authors_id=author2_.id'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=author2_,className=dev.hibernate.model.Author,classAlias=null}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'authors' {originalText=authors}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.BagType(dev.hibernate.model.Book.authors)}

2020-05-22 11:37:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:37:33 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.authors=:param0
2020-05-22 11:37:33 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ cross join book_author authors1_, author author2_ where book0_.id=authors1_.Book_id and authors1_.authors_id=author2_.id and .=?
2020-05-22 11:37:33 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:37:33 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ cross join book_author authors1_, author author2_ where book0_.id=authors1_.Book_id and authors1_.authors_id=author2_.id and .=?
2020-05-22 11:37:33 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
java.sql.SQLException: No value specified for parameter 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1020)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2287)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2045)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2007)
	at org.hibernate.loader.Loader.doQuery(Loader.java:953)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:354)
	at org.hibernate.loader.Loader.doList(Loader.java:2810)
	at org.hibernate.loader.Loader.doList(Loader.java:2792)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2624)
	at org.hibernate.loader.Loader.list(Loader.java:2619)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1410)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1558)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1526)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76)
	at dev.hibernate.dao.impl.BookDaoImpl.getByAuthor(BookDaoImpl.java:64)
	at dev.hibernate.service.impl.BookServiceImpl.getByAuthor(BookServiceImpl.java:31)
	at dev.hibernate.Main.main(Main.java:47)
2020-05-22 11:37:33 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 07001
2020-05-22 11:37:33 ERROR SqlExceptionHelper:142 - No value specified for parameter 1
2020-05-22 11:37:33 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:37:33 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:38:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:38:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:38:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:38:03 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:38:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:38:03 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:38:03 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:38:04 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:38:04 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:38:04 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:38:04 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:38:04 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:38:04 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:38:04 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:38:04 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:38:04 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:38:04 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:38:04 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:38:04 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:38:04 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:38:04 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:38:04 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:38:04 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:38:04 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:38:04 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:38:04 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:38:04 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:38:04 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:38:04 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6999cd39]
2020-05-22 11:38:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:04 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:38:04 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:38:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:38:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:38:04 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:38:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:38:04 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:38:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:04 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:38:04 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:38:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:38:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:38:04 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:38:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:04 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:38:04 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:38:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:04 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:38:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:38:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:38:04 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:38:04 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:38:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:38:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:38:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:38:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:38:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:38:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:38:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:38:04 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:38:04 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:38:04 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:38:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:38:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:38:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:38:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:38:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:38:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:38:04 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:38:04 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:38:04 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:38:04 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:38:04 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:38:04 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:38:04 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:38:04 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:38:04 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:38:04 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:38:04 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:38:04 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:38:04 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:38:04 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:38:04 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:38:04 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:38:04 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:38:04 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:38:04 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:38:04 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:38:04 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:38:04 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:38:04 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:38:04 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:38:04 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:38:04 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:38:04 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:38:04 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:38:04 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:38:04 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:38:04 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:38:04 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:38:04 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:38:04 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:38:04 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:38:04 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:38:04 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:38:04 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:38:04 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:38:04 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1bf39d06, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:38:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:38:04 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:38:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5c089b2f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@213bd3d5]
2020-05-22 11:38:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:38:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:38:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:38:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:38:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:38:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:38:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:38:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:38:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:38:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:38:05 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:38:05 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:38:05 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:38:05 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:38:05 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:38:05 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:38:05 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b6c6e70]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:38:05 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eb166a1]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:38:05 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:05 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:05 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b275811]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:38:05 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f044c58]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:38:05 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:05 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:05 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:38:05 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c017175]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b6924cb]
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e3e1014]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2daf06fc]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:38:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:38:05 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d1f558a]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28f4f300]
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5c4f17]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66933239]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:38:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:38:05 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:38:05 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:38:05 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17ba57f0]
2020-05-22 11:38:05 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3481ff98]
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:05 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:05 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:05 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:05 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:38:05 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:05 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:38:05 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@34b87182] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:38:05 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:38:05 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:38:05 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:38:05 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:38:05 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3a90c13c] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:38:05 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:38:05 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:38:05 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:38:05 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:38:05 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:38:05 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:38:05 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:38:05 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:38:05 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:38:05 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:38:05 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:38:05 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:38:05 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6e0e5dec
2020-05-22 11:38:05 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: e8e6dec3-707f-4336-af6a-4707ec3b41b6 (<unnamed>)
2020-05-22 11:38:05 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:38:05 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:38:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:05 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:38:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:38:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:38:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:05 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:38:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:38:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:38:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:05 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:38:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:38:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:38:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:05 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:38:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:38:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:38:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:05 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:38:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:38:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:05 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:38:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:38:05 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:38:05 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:38:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:38:05 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7ba93755
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:38:05 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:38:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:05 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:38:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:38:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:38:05 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:38:05 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:38:05 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:38:05 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:05 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:38:05 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:05 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:38:05 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:38:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:05 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:38:05 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:38:05 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:38:05 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:38:05 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:38:05 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:38:05 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:38:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:38:05 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:38:05 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:38:05 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:38:05 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:05 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:38:05 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:05 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:38:05 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:38:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:05 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:38:05 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:38:05 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:38:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:38:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:38:05 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:38:05 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:38:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:38:05 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:38:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:05 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:38:05 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:38:05 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:05 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:38:05 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:05 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:05 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:38:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:26 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:38:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:38:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:38:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:38:26 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:38:26 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:38:26 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:38:26 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:38:26 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:38:26 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:38:26 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:38:26 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:38:26 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:38:26 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:38:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:38:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:38:27 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:38:27 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:38:27 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:38:27 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:38:27 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:38:27 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:38:27 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:38:27 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:38:27 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:38:27 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:38:27 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:38:27 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:38:27 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:38:27 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 11:38:27 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:27 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:38:27 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:38:27 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:27 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:38:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:38:27 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:38:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:38:27 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:38:27 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:27 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:38:27 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:38:27 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:27 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:38:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:38:27 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:38:27 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:27 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:38:27 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:38:27 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:27 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:27 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:38:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:38:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:38:27 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:38:27 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:38:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:38:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:38:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:38:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:27 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:38:27 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:38:27 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:38:27 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:38:27 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:38:27 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 11:38:27 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:38:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:38:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:38:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:38:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:38:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:38:27 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:38:27 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:38:27 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:38:27 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:38:27 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:38:27 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:38:27 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:38:27 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:38:27 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:38:27 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:38:27 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:38:27 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:38:27 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:38:27 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:38:27 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:38:27 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:38:27 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:38:27 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:38:27 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:38:27 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:38:27 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:38:27 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:38:27 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:38:27 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:38:27 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:38:27 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:38:27 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:38:27 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:38:27 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:38:27 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:38:27 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:38:27 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:38:27 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:38:27 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:38:27 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:38:27 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:38:27 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:38:27 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:38:27 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:38:27 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:38:27 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68217d41, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:38:27 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:38:27 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:38:27 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@470a659f]
2020-05-22 11:38:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:38:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:38:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:38:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:38:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:38:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:38:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:38:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:38:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:38:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:38:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:38:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:38:28 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:38:28 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:38:28 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:38:28 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:38:28 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f324455]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:38:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554c4eaa]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:38:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0ed952]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:38:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d074b14]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:38:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:38:28 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559cedee]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a8d467e]
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3679d92e]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28237492]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:38:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:38:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abdec0e]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b5c4f17]
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ca8fcf3]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7efd0b]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:38:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:38:28 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:38:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:38:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3481ff98]
2020-05-22 11:38:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ddb3ae8]
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:38:28 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:28 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:38:28 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@47768e74] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:38:28 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:38:28 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:38:28 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:38:28 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:38:28 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@39c96e48] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:38:28 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:38:28 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:38:28 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:38:28 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 11:38:28 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:38:28 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:38:28 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:38:28 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:38:28 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:38:28 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:38:28 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:38:28 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:38:28 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:38:28 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@48a663e9
2020-05-22 11:38:28 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: de2670b2-dd6f-4965-954f-14352bf8a271 (<unnamed>)
2020-05-22 11:38:28 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:38:28 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:38:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:28 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:38:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:38:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:38:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:28 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:38:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:38:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:38:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:28 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:38:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:38:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:38:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:28 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:38:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:38:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:38:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:38:28 DEBUG TransactionImpl:81 - begin
2020-05-22 11:38:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:38:28 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:38:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:38:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:38:28 DEBUG TransactionImpl:98 - committing
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:38:28 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:38:28 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:38:28 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:38:28 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:38:28 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:38:28 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:38:28 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:38:28 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@22dc59b2
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:38:28 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:38:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:28 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:38:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:38:28 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:38:28 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:38:28 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:38:28 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:38:28 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:28 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:38:28 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:28 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:38:28 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:38:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:28 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:38:28 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:38:28 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:38:28 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:38:28 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:38:28 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:38:28 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:38:28 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:38:28 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:38:28 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:38:28 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:38:28 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:28 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:38:28 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:28 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:28 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:38:28 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:38:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:38:28 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:38:28 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:38:28 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:38:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:38:28 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:38:28 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:38:28 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:38:28 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:38:28 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:38:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:38:28 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:38:28 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:38:28 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:28 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:38:28 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:38:28 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:28 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:38:28 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:38:28 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:38:28 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:38:58 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:38:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:38:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:38:58 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:38:58 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:38:58 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:38:58 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:38:58 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:38:58 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:38:58 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:38:58 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:38:58 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:38:58 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:38:58 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:38:58 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:38:58 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:38:58 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:38:59 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:38:59 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:38:59 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:38:59 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:38:59 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:38:59 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:38:59 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:38:59 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:38:59 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:38:59 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:38:59 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:38:59 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:38:59 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@41477a6d]
2020-05-22 11:38:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:59 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:38:59 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:38:59 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:38:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:38:59 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:38:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:38:59 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:38:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:59 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:38:59 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:38:59 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:38:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:38:59 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:38:59 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:38:59 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:38:59 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:38:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:38:59 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:38:59 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:59 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:38:59 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:38:59 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:38:59 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:38:59 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:38:59 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:38:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:38:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:38:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:38:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:38:59 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:38:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:38:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:38:59 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:38:59 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:38:59 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 11:38:59 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:38:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:38:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:38:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:38:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:38:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:38:59 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:38:59 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:38:59 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:38:59 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:38:59 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:38:59 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:38:59 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:38:59 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:38:59 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:38:59 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:38:59 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:38:59 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:38:59 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:38:59 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:38:59 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:38:59 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:38:59 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:38:59 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:38:59 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:38:59 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:38:59 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:38:59 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:38:59 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:38:59 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:38:59 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:38:59 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:38:59 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:38:59 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:38:59 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:38:59 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:38:59 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:38:59 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:38:59 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:38:59 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:38:59 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:38:59 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:38:59 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:38:59 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:38:59 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:38:59 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:38:59 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3ae0b770, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:38:59 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:38:59 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:38:59 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@263bbfeb]
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:38:59 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:38:59 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:38:59 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:38:59 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:38:59 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:38:59 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795f5d51]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:38:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2e1024]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:38:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8816cc]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:38:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37baddde]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:38:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:38:59 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b31a708]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d19d85]
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@633cc6b5]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c3e4b1a]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:38:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:38:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@177c41d7]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d61a348]
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a515e4]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a374be]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:38:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:38:59 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:38:59 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:38:59 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73809e7]
2020-05-22 11:38:59 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f96f6a2]
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:38:59 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:38:59 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:38:59 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:38:59 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:38:59 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:38:59 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:38:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@72503b19] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:38:59 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:38:59 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:38:59 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:38:59 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:38:59 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3a1706e1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:38:59 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:39:00 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:39:00 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:39:00 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 11:39:00 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:39:00 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:39:00 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:39:00 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:39:00 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:39:00 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:39:00 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:39:00 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:39:00 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:39:00 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45b15381
2020-05-22 11:39:00 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 94b68d49-81be-42eb-a0db-8de88c0dcd49 (<unnamed>)
2020-05-22 11:39:00 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:39:00 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:39:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:39:00 DEBUG TransactionImpl:81 - begin
2020-05-22 11:39:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:39:00 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:39:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:39:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:39:00 DEBUG TransactionImpl:98 - committing
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:39:00 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:39:00 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:39:00 DEBUG TransactionImpl:81 - begin
2020-05-22 11:39:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:39:00 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:39:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:39:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:39:00 DEBUG TransactionImpl:98 - committing
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:39:00 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:39:00 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:39:00 DEBUG TransactionImpl:81 - begin
2020-05-22 11:39:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:39:00 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:39:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:39:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:39:00 DEBUG TransactionImpl:98 - committing
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:39:00 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:39:00 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:39:00 DEBUG TransactionImpl:81 - begin
2020-05-22 11:39:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:39:00 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:39:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:39:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:39:00 DEBUG TransactionImpl:98 - committing
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:39:00 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:39:00 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:39:00 DEBUG TransactionImpl:81 - begin
2020-05-22 11:39:00 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:39:00 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:39:00 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:39:00 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:39:00 DEBUG TransactionImpl:98 - committing
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:39:00 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:39:00 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:39:00 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:39:00 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:39:00 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:39:00 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:39:00 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:39:00 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@19bedeb8
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:39:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:39:00 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:39:00 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:39:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:39:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:39:00 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:39:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:39:00 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:39:00 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:39:00 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:39:00 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:39:00 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:39:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:39:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:39:00 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:39:00 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:39:00 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:39:00 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:39:00 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:39:00 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:39:00 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:39:00 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:39:00 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:39:00 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:39:00 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:39:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:39:00 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:39:00 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:39:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:39:00 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:39:00 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:39:00 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:39:00 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:39:00 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:39:00 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:39:00 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:39:00 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:39:00 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:39:00 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:39:00 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:39:00 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:39:00 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:39:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:39:00 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:39:00 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:39:00 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:39:00 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:39:00 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:39:00 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:39:00 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:39:00 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:39:00 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:39:00 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:39:00 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:39:00 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:39:00 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:39:00 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:39:00 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:13 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:41:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:41:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:41:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:41:13 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:41:13 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:41:13 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:41:13 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:41:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:41:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:41:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:41:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:41:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:41:13 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:41:14 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:41:14 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:41:14 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:41:14 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:41:14 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:41:14 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:41:14 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:41:14 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:41:14 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:41:14 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:41:14 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:41:14 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:41:14 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:41:14 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:41:14 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:41:14 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@41477a6d]
2020-05-22 11:41:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:41:14 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:41:14 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:41:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:41:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:41:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:41:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:41:14 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:41:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:41:14 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:41:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:41:14 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:41:14 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:41:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:41:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:41:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:41:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:41:14 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:41:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:41:14 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:41:14 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:41:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:41:14 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:41:14 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:41:14 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:41:14 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:41:14 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:41:14 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:41:14 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:41:14 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:41:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:41:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:41:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:41:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:41:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:41:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:41:14 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:41:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:41:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:41:14 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:41:14 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:41:14 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 11:41:14 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:41:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:41:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:41:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:41:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:41:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:41:14 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:41:14 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:41:14 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:41:14 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:41:14 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:41:14 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:41:14 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:41:14 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:41:14 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:41:14 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:41:14 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:41:14 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:41:14 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:41:14 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:41:14 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:41:14 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:41:14 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:41:14 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:41:14 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:41:14 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:41:14 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:41:14 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:41:14 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:41:14 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:41:14 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:41:14 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:41:14 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:41:14 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:41:14 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:41:14 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:41:14 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:41:14 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:41:14 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:41:14 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:41:14 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:41:14 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:41:14 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:41:14 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:41:14 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:41:14 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:41:14 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3ae0b770, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:41:14 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:41:14 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:41:14 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66908383] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@263bbfeb]
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:41:14 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:41:14 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:41:14 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:41:14 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:41:14 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:41:14 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:41:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795f5d51]
2020-05-22 11:41:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:41:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:41:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:41:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:41:14 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:41:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2e1024]
2020-05-22 11:41:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:41:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:41:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:41:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:41:14 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:41:14 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:41:14 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:41:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8816cc]
2020-05-22 11:41:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:41:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:41:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:41:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:41:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:41:14 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:41:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37baddde]
2020-05-22 11:41:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:41:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:41:14 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:41:14 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:41:14 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:41:14 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:41:14 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:41:14 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:41:14 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:41:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b31a708]
2020-05-22 11:41:14 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:41:14 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d19d85]
2020-05-22 11:41:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@633cc6b5]
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:41:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c3e4b1a]
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:41:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:41:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:41:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:41:15 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:41:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@177c41d7]
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:41:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d61a348]
2020-05-22 11:41:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a515e4]
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:41:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a374be]
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:41:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:41:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:41:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:41:15 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:41:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:41:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:41:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73809e7]
2020-05-22 11:41:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f96f6a2]
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:41:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:41:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:41:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:41:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:41:15 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:41:15 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:41:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@72503b19] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:41:15 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:41:15 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:41:15 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:41:15 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:41:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3a1706e1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:41:15 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:41:15 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:41:15 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:41:15 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 11:41:15 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:41:15 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:41:15 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:41:15 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:41:15 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:41:15 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:41:15 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:41:15 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:41:15 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:41:15 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45b15381
2020-05-22 11:41:15 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 6db0396b-a5e7-460a-9352-b10626ceb6b9 (<unnamed>)
2020-05-22 11:41:15 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:41:15 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:41:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:41:15 DEBUG TransactionImpl:81 - begin
2020-05-22 11:41:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:41:15 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:41:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:41:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:41:15 DEBUG TransactionImpl:98 - committing
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:41:15 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:41:15 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:41:15 DEBUG TransactionImpl:81 - begin
2020-05-22 11:41:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:41:15 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:41:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:41:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:41:15 DEBUG TransactionImpl:98 - committing
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:41:15 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:41:15 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:41:15 DEBUG TransactionImpl:81 - begin
2020-05-22 11:41:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:41:15 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:41:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:41:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:41:15 DEBUG TransactionImpl:98 - committing
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:41:15 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:41:15 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:41:15 DEBUG TransactionImpl:81 - begin
2020-05-22 11:41:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:41:15 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:41:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:41:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:41:15 DEBUG TransactionImpl:98 - committing
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:41:15 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:41:15 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:41:15 DEBUG TransactionImpl:81 - begin
2020-05-22 11:41:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:41:15 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:41:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:41:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:41:15 DEBUG TransactionImpl:98 - committing
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:41:15 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:41:15 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:41:15 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:41:15 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:41:15 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:41:15 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:41:15 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:41:15 DEBUG TransactionImpl:81 - begin
2020-05-22 11:41:15 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:41:15 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:41:15 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:41:15 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:41:15 DEBUG TransactionImpl:98 - committing
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:41:15 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#2], was: [<unreferenced>] (initialized)
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:41:15 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:41:15 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:41:15 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#1, id=2, title=Some, authors=[dev.hibernate.model.Author#1, dev.hibernate.model.Author#2]}
2020-05-22 11:41:15 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:41:15 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:41:15 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'UK_fm4x07pcr6ku8w7euqtrhwofv'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1354)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:52)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:349)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1358)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:436)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3235)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2403)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at dev.hibernate.dao.impl.BookDaoImpl.add(BookDaoImpl.java:29)
	at dev.hibernate.service.impl.BookServiceImpl.add(BookServiceImpl.java:21)
	at dev.hibernate.Main.main(Main.java:50)
2020-05-22 11:41:15 WARN  SqlExceptionHelper:137 - SQL Error: 1062, SQLState: 23000
2020-05-22 11:41:15 ERROR SqlExceptionHelper:142 - Duplicate entry '1' for key 'UK_fm4x07pcr6ku8w7euqtrhwofv'
2020-05-22 11:41:15 INFO  AbstractBatchImpl:204 - HHH000010: On release of batch it still contained JDBC statements
2020-05-22 11:41:15 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:324 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:436)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3235)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2403)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at dev.hibernate.dao.impl.BookDaoImpl.add(BookDaoImpl.java:29)
	at dev.hibernate.service.impl.BookServiceImpl.add(BookServiceImpl.java:21)
	at dev.hibernate.Main.main(Main.java:50)
2020-05-22 11:41:15 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:324 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at dev.hibernate.dao.impl.BookDaoImpl.add(BookDaoImpl.java:29)
	at dev.hibernate.service.impl.BookServiceImpl.add(BookServiceImpl.java:21)
	at dev.hibernate.Main.main(Main.java:50)
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:41:15 DEBUG TransactionImpl:131 - rollback() called on an inactive transaction
2020-05-22 11:41:15 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:42:34 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:42:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:42:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:42:34 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:42:34 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:42:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:42:34 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:42:34 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:42:35 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:42:35 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:42:35 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:42:35 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:42:35 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:42:35 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:42:35 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:42:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:42:35 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:42:35 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:42:35 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:42:35 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:42:35 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:42:35 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:42:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:42:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:42:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:42:35 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:42:35 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:42:35 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:42:35 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:42:35 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 11:42:35 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:42:35 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:42:35 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:42:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:42:35 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:42:35 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:42:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:42:35 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:42:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:42:35 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:42:35 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:42:35 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:42:35 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:42:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:42:35 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:42:35 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:42:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:42:35 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:42:35 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:42:35 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:42:35 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:42:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:42:35 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:42:35 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:42:35 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:42:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:42:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:42:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:42:35 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:42:35 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:42:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:42:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:42:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:42:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:42:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:42:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:42:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:42:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:42:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:42:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:42:35 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:42:35 DEBUG CollectionBinder:1316 - Binding a OneToMany: dev.hibernate.model.Book.authors through an association table
2020-05-22 11:42:35 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:42:35 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:42:35 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:42:35 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:42:35 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:42:35 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:42:35 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:42:35 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:42:35 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:42:35 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:42:35 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:42:35 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:42:35 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:42:35 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:42:35 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:42:35 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:42:35 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:42:35 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:42:35 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:42:35 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:42:35 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:42:35 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:42:35 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:42:35 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:42:35 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:42:35 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:42:35 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:42:35 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:42:35 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:42:35 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:42:35 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:42:35 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:42:35 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:42:35 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:42:35 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:42:35 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:42:35 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:42:35 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:42:35 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:42:35 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:42:35 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:42:35 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:42:35 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:42:35 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:42:35 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:42:35 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:42:35 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@68217d41, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:42:35 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:42:35 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:42:35 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@470a659f]
2020-05-22 11:42:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:42:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:42:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:42:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:42:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:42:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:42:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:42:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:42:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:42:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:42:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:42:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:42:36 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:42:36 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:42:36 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:42:36 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:42:36 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f324455]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:42:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:42:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:42:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:42:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554c4eaa]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:42:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:42:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:42:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:42:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:42:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:42:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0ed952]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:42:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:42:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:42:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:42:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d074b14]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:42:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:42:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:42:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:42:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:42:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:42:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:42:36 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@559cedee]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a8d467e]
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3679d92e]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28237492]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:42:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:42:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:42:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:42:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abdec0e]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2b5c4f17]
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ca8fcf3]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7efd0b]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:42:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:42:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:42:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:42:36 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:42:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:42:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3481ff98]
2020-05-22 11:42:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ddb3ae8]
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:42:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:42:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:42:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:42:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:42:36 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:42:36 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:42:36 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@47768e74] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:42:36 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:42:36 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:42:36 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:42:36 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:42:36 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@49a6f486] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:42:36 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:42:36 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:42:36 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:42:36 DEBUG SQL:127 - alter table book_author add constraint UK_fm4x07pcr6ku8w7euqtrhwofv unique (authors_id)
2020-05-22 11:42:36 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:42:36 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:42:36 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:42:36 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:42:36 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:42:36 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:42:36 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:42:36 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:42:36 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:42:36 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7e83992
2020-05-22 11:42:36 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 99bbbef9-b531-4998-ba99-f5b34fa6538e (<unnamed>)
2020-05-22 11:42:36 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:42:36 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:42:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:42:36 DEBUG TransactionImpl:81 - begin
2020-05-22 11:42:36 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:42:36 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:42:36 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:42:36 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:42:36 DEBUG TransactionImpl:98 - committing
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:42:36 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:42:36 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:42:36 DEBUG TransactionImpl:81 - begin
2020-05-22 11:42:36 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:42:36 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:42:36 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:42:36 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:42:36 DEBUG TransactionImpl:98 - committing
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:42:36 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:42:36 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:42:36 DEBUG TransactionImpl:81 - begin
2020-05-22 11:42:36 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:42:36 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:42:36 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:42:36 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:42:36 DEBUG TransactionImpl:98 - committing
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:42:36 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:42:36 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:42:36 DEBUG TransactionImpl:81 - begin
2020-05-22 11:42:36 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:42:36 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:42:36 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:42:36 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:42:36 DEBUG TransactionImpl:98 - committing
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:42:36 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:42:36 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:42:36 DEBUG TransactionImpl:81 - begin
2020-05-22 11:42:36 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:42:36 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:42:36 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:42:36 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:42:36 DEBUG TransactionImpl:98 - committing
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:42:36 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:42:36 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:42:36 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:42:36 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:42:36 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:42:36 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:42:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:42:36 DEBUG TransactionImpl:81 - begin
2020-05-22 11:42:36 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:42:36 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:42:36 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:42:36 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:42:36 DEBUG TransactionImpl:98 - committing
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:42:36 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#2], was: [<unreferenced>] (initialized)
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:42:36 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:42:36 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:42:36 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#1, id=2, title=Some, authors=[dev.hibernate.model.Author#1, dev.hibernate.model.Author#2]}
2020-05-22 11:42:36 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:42:36 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:42:36 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'UK_fm4x07pcr6ku8w7euqtrhwofv'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1092)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1040)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1340)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1025)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1354)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:52)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:349)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:108)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1358)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:436)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3235)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2403)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at dev.hibernate.dao.impl.BookDaoImpl.add(BookDaoImpl.java:29)
	at dev.hibernate.service.impl.BookServiceImpl.add(BookServiceImpl.java:21)
	at dev.hibernate.Main.main(Main.java:50)
2020-05-22 11:42:36 WARN  SqlExceptionHelper:137 - SQL Error: 1062, SQLState: 23000
2020-05-22 11:42:36 ERROR SqlExceptionHelper:142 - Duplicate entry '1' for key 'UK_fm4x07pcr6ku8w7euqtrhwofv'
2020-05-22 11:42:36 INFO  AbstractBatchImpl:204 - HHH000010: On release of batch it still contained JDBC statements
2020-05-22 11:42:36 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:324 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1362)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:436)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3235)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2403)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:447)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at dev.hibernate.dao.impl.BookDaoImpl.add(BookDaoImpl.java:29)
	at dev.hibernate.service.impl.BookServiceImpl.add(BookServiceImpl.java:21)
	at dev.hibernate.Main.main(Main.java:50)
2020-05-22 11:42:36 DEBUG JdbcResourceLocalTransactionCoordinatorImpl:324 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at dev.hibernate.dao.impl.BookDaoImpl.add(BookDaoImpl.java:29)
	at dev.hibernate.service.impl.BookServiceImpl.add(BookServiceImpl.java:21)
	at dev.hibernate.Main.main(Main.java:50)
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:42:36 DEBUG TransactionImpl:131 - rollback() called on an inactive transaction
2020-05-22 11:42:36 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:43:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:43:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:43:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:43:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:43:14 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:43:14 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:43:14 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:43:14 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:43:15 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:43:15 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:43:15 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:43:15 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:43:15 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:43:15 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:43:15 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:43:15 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:43:15 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:43:15 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:43:15 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:43:15 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:43:15 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:43:15 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:43:15 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:43:15 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:43:15 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:43:15 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:43:15 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:43:15 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:43:15 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:43:15 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64e1dd11] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5c089b2f]
2020-05-22 11:43:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:43:15 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:43:15 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:43:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:43:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:43:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:43:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:43:15 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:43:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:43:15 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:43:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:43:15 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:43:15 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:43:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:43:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:43:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:43:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:43:15 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:43:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:43:15 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:43:15 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:43:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:43:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:43:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:43:15 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:43:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:43:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:43:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:43:15 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:43:15 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:43:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:43:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:43:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:43:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:43:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:43:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:43:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:43:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:43:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:43:15 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:43:15 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:43:15 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:43:15 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:43:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:43:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:43:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:43:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:43:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:43:15 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:43:15 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:43:15 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:43:15 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:43:15 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:43:15 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:43:15 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:43:15 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:43:15 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:43:15 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:43:15 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:43:15 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:43:15 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:43:15 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:43:15 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:43:15 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:43:15 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:43:15 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:43:15 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:43:15 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:43:15 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:43:15 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:43:15 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:43:15 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:43:15 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:43:15 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:43:15 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:43:15 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:43:15 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:43:15 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:43:15 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:43:15 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:43:15 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:43:15 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:43:15 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:43:15 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:43:15 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:43:15 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:43:15 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:43:15 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:43:15 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4fad6218, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:43:15 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:43:15 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:43:15 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@64e1dd11] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3b2f4a93]
2020-05-22 11:43:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:43:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:43:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:43:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:43:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:43:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:43:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:43:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:43:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:43:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:43:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:43:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@767f6ee7]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:43:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:43:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed922e1]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:43:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:43:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:43:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:43:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43982337]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:43:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:43:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f0ed952]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:43:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:43:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:43:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:43:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:43:16 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d074b14]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59fbb34]
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cbe7d4d]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@403c3a01]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:43:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:43:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dffda8b]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6abdec0e]
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f4f300]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69f0b0f4]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:43:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:43:16 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:43:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:43:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68a78f3c]
2020-05-22 11:43:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ba57f0]
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:43:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:43:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:43:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:43:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:43:16 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:43:16 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:43:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3c380bd8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:43:16 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:43:16 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:43:16 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:43:16 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:43:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@663f237a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:43:16 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:43:16 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:43:16 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:43:16 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:43:16 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:43:16 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:43:16 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:43:16 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:43:16 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:43:16 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:43:16 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:43:16 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:43:16 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7668892a
2020-05-22 11:43:16 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: aae53a18-85b6-4707-ae85-e0fb71ce63c3 (<unnamed>)
2020-05-22 11:43:16 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:43:16 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:43:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:16 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:16 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:43:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:43:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:16 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:16 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:16 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:43:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:43:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:16 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:16 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:16 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:43:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:43:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:16 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:16 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:16 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:43:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:43:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:16 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:43:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:16 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:16 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:43:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:43:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:16 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:43:16 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:43:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:43:16 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:43:16 DEBUG TransactionImpl:81 - begin
2020-05-22 11:43:16 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:43:16 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:43:16 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:43:16 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:43:16 DEBUG TransactionImpl:98 - committing
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:43:16 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#2], was: [<unreferenced>] (initialized)
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:43:16 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:43:16 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:43:16 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#1, id=2, title=Some, authors=[dev.hibernate.model.Author#1, dev.hibernate.model.Author#2]}
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:43:16 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:43:16 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:43:16 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 2 rows inserted
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:43:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:43:16 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@25f61c2c
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:43:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:43:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:43:16 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:43:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:43:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:43:16 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:43:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:43:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:43:16 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:43:16 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:43:16 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:43:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:43:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:43:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:16 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:43:16 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:43:16 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:43:16 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:43:16 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:43:16 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:43:16 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:43:16 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:43:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:43:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:43:16 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:43:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:43:16 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:43:16 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:43:16 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:43:16 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:43:16 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:43:16 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:43:16 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:43:16 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:43:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:43:16 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:43:16 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:43:16 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:43:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:43:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:43:16 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:43:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:43:16 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:43:16 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:43:16 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:43:16 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:43:16 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#2]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:43:16 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#2]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 1
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:43:16 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = drama
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#1]
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#1
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Some
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#2]
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:43:16 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:43:16 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#2]
2020-05-22 11:43:16 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:43:16 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#2]
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Lina
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Kostenko
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:43:16 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#2]
2020-05-22 11:43:16 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:43:16 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:43:16 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:43:16 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:43:16 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:43:16 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:43:16 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:43:16 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:44:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:44:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:44:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:44:03 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:44:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:44:03 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:44:03 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:44:03 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:44:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:44:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:44:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:44:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:44:03 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:44:03 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:44:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:44:03 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:44:04 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:44:04 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:44:04 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:44:04 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:44:04 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:44:04 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:44:04 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:44:04 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:44:04 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:44:04 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:44:04 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:44:04 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:44:04 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69c6161d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3aefae67]
2020-05-22 11:44:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:04 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:44:04 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:44:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:44:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:44:04 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:44:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:44:04 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:44:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:04 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:44:04 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:44:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:44:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:44:04 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:44:04 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:04 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:44:04 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:44:04 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:04 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:04 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:44:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:44:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:44:04 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:44:04 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:44:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:44:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:44:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:44:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:04 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:44:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:44:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:44:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:44:04 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:44:04 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:44:04 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:44:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:44:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:44:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:44:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:44:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:44:04 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:44:04 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:44:04 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:44:04 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:44:04 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:44:04 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:44:04 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:44:04 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:44:04 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:44:04 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:44:04 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:44:04 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:44:04 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:44:04 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:44:04 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:44:04 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:44:04 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:44:04 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:44:04 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:44:04 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:44:04 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:44:04 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:44:04 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:44:04 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:44:04 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:44:04 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:44:04 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:44:04 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:44:04 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:44:04 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:44:04 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:44:04 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:44:04 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:44:04 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:44:04 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:44:04 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:44:04 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:44:04 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:44:04 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:44:04 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:44:04 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6ea04618, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:44:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:44:04 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:44:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69c6161d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@73a19967]
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:44:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:44:04 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:44:04 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:04 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:44:04 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:44:04 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@642413d4]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:44:04 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24386839]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:44:04 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e2232f]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:44:04 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@462e1e64]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:44:04 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:44:04 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c0905f6]
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68ed3f30]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e3e1014]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:44:04 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2db4ad1]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2513a118]
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bfb583b]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5762658b]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:44:04 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:44:04 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:44:04 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@161aa04a]
2020-05-22 11:44:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@436bd4df]
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:44:04 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:04 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:44:04 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@203d1d93] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:44:04 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:44:04 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:44:04 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:44:04 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:44:04 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6bcc3f27] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:44:05 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:44:05 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:44:05 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:44:05 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:44:05 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:44:05 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:44:05 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:44:05 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:44:05 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:44:05 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:44:05 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:44:05 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:44:05 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@24a2e565
2020-05-22 11:44:05 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: cf48a800-8b56-4860-82a4-7e503f362b5c (<unnamed>)
2020-05-22 11:44:05 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:44:05 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:44:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:05 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:44:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:05 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:44:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:05 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:44:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:05 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:44:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:05 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:05 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:44:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:44:05 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:05 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:44:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:05 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:05 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:05 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:05 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#2], was: [<unreferenced>] (initialized)
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:05 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:44:05 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:05 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#1, id=2, title=Some, authors=[dev.hibernate.model.Author#1, dev.hibernate.model.Author#2]}
2020-05-22 11:44:05 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:05 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:05 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:05 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 2 rows inserted
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:44:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:05 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7a687d8d
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:05 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:05 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:44:05 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:44:05 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:44:05 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:05 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:05 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:05 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:05 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:05 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:05 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:44:05 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:44:05 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:44:05 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:44:05 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:44:05 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:44:05 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:44:05 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:44:05 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:44:05 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:05 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:44:05 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#2]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#2]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 1
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = drama
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#1]
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#1
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Some
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#2]
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:05 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:05 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:05 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:05 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#2]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Lina
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Kostenko
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#2]
2020-05-22 11:44:05 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:05 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:05 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:05 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:05 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:05 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:05 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:05 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:44:05 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:44:05 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:44:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:05 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:44:05 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:44:05 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:05 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:44:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:05 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:44:05 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:05 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:05 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:05 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:05 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:05 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:05 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:05 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:05 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:21 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:44:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:44:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:44:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:44:22 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:44:22 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:44:22 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:44:22 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:44:22 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:44:22 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:44:22 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:44:22 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:44:22 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:44:22 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:44:22 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:44:22 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:44:22 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:44:22 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:44:22 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:44:22 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:44:22 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:44:22 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:44:23 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:44:23 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:44:23 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:44:23 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:44:23 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:44:23 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:44:23 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:44:23 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5eccd3b9]
2020-05-22 11:44:23 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:23 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:44:23 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:44:23 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:23 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:44:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:44:23 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:44:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:44:23 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:44:23 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:23 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:44:23 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:44:23 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:23 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:44:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:44:23 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:44:23 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:23 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:44:23 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:44:23 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:23 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:23 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:44:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:44:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:44:23 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:44:23 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:44:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:44:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:44:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:44:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:44:23 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:44:23 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:44:23 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:44:23 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:44:23 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:44:23 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:44:23 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:44:23 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:44:23 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:44:23 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:44:23 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:44:23 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:44:23 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:44:23 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:44:23 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:44:23 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:44:23 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:44:23 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:44:23 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:44:23 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:44:23 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:44:23 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:44:23 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:44:23 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:44:23 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:44:23 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:44:23 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:44:23 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:44:23 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:44:23 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:44:23 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:44:23 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:44:23 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:44:23 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:44:23 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:44:23 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:44:23 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:44:23 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:44:23 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:44:23 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:44:23 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:44:23 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:44:23 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:44:23 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:44:23 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:44:23 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:44:23 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:44:23 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:44:23 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:44:23 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:44:23 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:44:23 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7cb8437d, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:44:23 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:44:23 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:44:23 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e558728] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4016ccc1]
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:44:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:44:23 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:44:23 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:23 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:44:23 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:44:23 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@106d77da]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:44:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c281ed]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:44:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:23 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:23 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a4401]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:44:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e64760]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:44:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:23 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:23 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:44:23 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43982337]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f4ba1ae]
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7426a448]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f798482]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:44:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:44:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2596d7f4]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6aa3bfc]
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4599c0]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6abdec0e]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:44:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:44:23 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:44:23 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:44:23 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7be1ce6a]
2020-05-22 11:44:23 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3119cf6f]
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:23 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:23 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:23 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:23 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:44:23 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:23 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:44:23 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@34a2d6e0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:44:23 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:44:23 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:44:23 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:44:23 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:44:23 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@30893e08] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:44:23 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:44:23 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:44:23 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:44:23 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:44:23 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:44:23 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:44:23 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:44:23 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:44:23 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:44:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:44:23 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:44:23 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:44:23 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3d0cac1f
2020-05-22 11:44:23 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: d6673eb9-3a2a-474a-bd7c-31724aad8898 (<unnamed>)
2020-05-22 11:44:23 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:44:24 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:44:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:24 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:24 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:44:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:24 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:24 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:24 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:24 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:44:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:24 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:24 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:24 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:24 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:44:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:24 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:24 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:24 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:24 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:44:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:24 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:24 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:24 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:24 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:24 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:24 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:44:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:24 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:44:24 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:24 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:44:24 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:24 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:24 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:24 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:24 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:24 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:24 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:24 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#2], was: [<unreferenced>] (initialized)
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:24 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:44:24 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:24 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=2, title=Some, authors=[dev.hibernate.model.Author#1, dev.hibernate.model.Author#2]}
2020-05-22 11:44:24 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:24 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:24 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 2 rows inserted
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:44:24 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:24 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@664212ab
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:24 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:24 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:44:24 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:44:24 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:44:24 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:24 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:24 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:24 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:24 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:24 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:44:24 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:44:24 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:44:24 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:44:24 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:44:24 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:44:24 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:44:24 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:44:24 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:44:24 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:24 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:44:24 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:24 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Some
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#2]
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:24 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Lina
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Kostenko
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#2]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:24 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:24 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:24 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:24 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:44:24 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:44:24 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:44:24 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:24 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:44:24 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:44:24 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:24 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:24 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:44:24 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:24 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:44:24 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:24 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:44:24 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:24 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Some
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#2]
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:24 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#2]
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Lina
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Kostenko
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:24 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#2]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:24 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:24 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:24 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:24 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:47 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:44:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:44:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:44:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:44:47 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:44:47 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:44:47 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:44:47 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:44:47 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:44:47 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:44:47 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:44:47 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:44:47 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:44:47 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:44:47 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:44:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:44:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:44:48 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:44:48 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:44:48 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:44:48 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:44:48 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:44:48 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:44:48 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:44:48 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:44:48 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:44:48 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:44:48 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:44:48 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:44:48 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:44:48 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@796d3c9f]
2020-05-22 11:44:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:48 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:44:48 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:44:48 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:44:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:44:48 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:44:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:44:48 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:44:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:48 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:44:48 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:44:48 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:44:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:44:48 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:44:48 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:44:48 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:44:48 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:44:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:44:48 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:44:48 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:48 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:44:48 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:44:48 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:44:48 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:44:48 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:44:48 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:44:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:44:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:44:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:44:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:44:48 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:44:48 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:44:48 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:44:48 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:44:48 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:44:48 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:44:48 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:44:48 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:44:48 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:44:48 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:44:48 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:44:48 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:44:48 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:44:48 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:44:48 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:44:48 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:44:48 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:44:48 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:44:48 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:44:48 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:44:48 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:44:48 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:44:48 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:44:48 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:44:48 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:44:48 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:44:48 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:44:48 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:44:48 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:44:48 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:44:48 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:44:48 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:44:48 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:44:48 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:44:48 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:44:48 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:44:48 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:44:48 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:44:48 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:44:48 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:44:48 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:44:48 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:44:48 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:44:48 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:44:48 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:44:48 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:44:48 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:44:48 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:44:48 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:44:48 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:44:48 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:44:48 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:44:48 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@36fcf6c0, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:44:48 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:44:48 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:44:48 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5ec46cdd]
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:44:48 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:44:48 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:44:48 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:48 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:44:48 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:44:48 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b66322e]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:44:48 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b81616b]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:44:48 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:48 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:48 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:44:48 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d6d273]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:44:48 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:48 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:48 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:44:48 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a4401]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@204abeff]
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43bf5397]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36aa52d2]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:44:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:44:48 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73ae0257]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5762658b]
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2629d5dc]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa3bfc]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:44:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:44:48 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:44:48 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:44:48 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5740ff5e]
2020-05-22 11:44:48 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a901445]
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:44:48 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:44:48 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:44:48 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:44:48 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:44:48 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:48 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:44:48 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@350ec690] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:44:49 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:44:49 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:44:49 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:44:49 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:44:49 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@668625f5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:44:49 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:44:49 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:44:49 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:44:49 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:44:49 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:44:49 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:44:49 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:44:49 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:44:49 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:44:49 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:44:49 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:44:49 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:44:49 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7b477141
2020-05-22 11:44:49 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: ae0db6e1-d2a5-43fc-8b0c-9262a7103999 (<unnamed>)
2020-05-22 11:44:49 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:44:49 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:44:49 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:49 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:49 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:49 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:44:49 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:49 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:49 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:49 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:49 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:49 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:49 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:49 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:44:49 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:49 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:49 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:49 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:49 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:49 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:49 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:49 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:44:49 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:49 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:49 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:49 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:49 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:49 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:49 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:49 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:44:49 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:49 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:49 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:44:49 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:49 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:49 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:49 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:49 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:49 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:44:49 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:49 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:49 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:44:49 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:49 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:44:49 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:49 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:44:49 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:44:49 DEBUG TransactionImpl:81 - begin
2020-05-22 11:44:49 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:44:49 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:44:49 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:44:49 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:44:49 DEBUG TransactionImpl:98 - committing
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:44:49 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#2], was: [<unreferenced>] (initialized)
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:44:49 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:44:49 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:44:49 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=2, title=Some, authors=[dev.hibernate.model.Author#1, dev.hibernate.model.Author#2]}
2020-05-22 11:44:49 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:49 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:44:49 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 2 rows inserted
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:44:49 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:49 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@144ab983
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:49 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:49 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:49 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:49 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:44:49 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:49 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:44:49 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:44:49 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:44:49 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:49 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:49 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:49 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:49 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:49 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:49 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:49 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:44:49 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:44:49 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:44:49 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:44:49 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:44:49 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:44:49 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:49 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:44:49 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:44:49 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:44:49 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:49 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:44:49 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:49 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Some
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#2]
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:49 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Lina
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Kostenko
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#2]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:49 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:44:49 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:44:49 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:44:49 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:49 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:44:49 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:44:49 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:44:49 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:44:49 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:44:49 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:44:49 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:44:49 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:44:49 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:44:49 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:44:49 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:44:49 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:44:49 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:44:49 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:44:49 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:44:49 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Some
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#2]
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:49 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#2]
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Lina
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Kostenko
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:44:49 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#2]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:44:49 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:44:49 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:44:49 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:44:49 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:29 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2020-05-22 11:45:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2020-05-22 11:45:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2020-05-22 11:45:29 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2020-05-22 11:45:29 INFO  Version:46 - HHH000412: Hibernate Core {5.4.5.Final}
2020-05-22 11:45:29 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2020-05-22 11:45:29 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2020-05-22 11:45:29 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2020-05-22 11:45:29 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2020-05-22 11:45:29 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2020-05-22 11:45:29 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2020-05-22 11:45:29 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2020-05-22 11:45:29 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2020-05-22 11:45:29 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5674e1f2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2df6226d
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55322aab
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@146587a2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@b1712f3
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2da59753
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d9ac0b4
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e636ea3
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6127a7e
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3212a8d7
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7203c7ff
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7cf6a5f9
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35f26e72
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@6399551e
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6399551e
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@74c79fa2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3e30646a
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fdf1c5
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@32193bea
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66fdec9
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@576f63f6
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6e35bc3d
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b73be9f
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@56f0cc85
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59d2400d
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ee660fb
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f6c9cd8
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1817f1eb
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52066604
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@373ebf74
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d9f7a80
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542e560f
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35d08e6c
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59f63e24
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@178213b
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@72c28d64
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@51972dc7
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31000e60
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@fc258b1
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b0f373b
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@70a36a66
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@6622fc65
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b00f608
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4aa83f4f
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@12bd8a64
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@70ab2d48
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8692d67
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@753432a2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42f8285e
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2320fa6f
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77a7cf58
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7e7b159b
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@40dff0b7
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bff64c2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc41abc
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4566d049
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61ce23ac
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3668d4
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1c3b9394
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f2cfcc2
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f6f61c8
2020-05-22 11:45:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c2cc639
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2020-05-22 11:45:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2020-05-22 11:45:29 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2020-05-22 11:45:30 INFO  pooling:115 - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/hibernate?serverTimezone=UTC]
2020-05-22 11:45:30 INFO  pooling:121 - HHH10001001: Connection properties: {password=root, user=root}
2020-05-22 11:45:30 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2020-05-22 11:45:30 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2020-05-22 11:45:30 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 20 (min=1)
2020-05-22 11:45:30 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.30-0ubuntu0.18.04.1
      major : 5
      minor : 7
2020-05-22 11:45:30 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.17 (Revision: 16a712ddb3f826a1933ab42b0039f7fb9eebc6ec)
      major : 8
      minor : 0
2020-05-22 11:45:30 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2020-05-22 11:45:30 INFO  Dialect:172 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2020-05-22 11:45:30 DEBUG IdentifierHelperBuilder:113 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2020-05-22 11:45:30 DEBUG IdentifierHelperBuilder:187 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2020-05-22 11:45:30 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2020-05-22 11:45:30 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@796d3c9f]
2020-05-22 11:45:30 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Author
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:45:30 DEBUG EntityBinder:430 - Import with entity name Author
2020-05-22 11:45:30 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Author on table author
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:45:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:id]
2020-05-22 11:45:30 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:45:30 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:45:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:name]
2020-05-22 11:45:30 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(author), mappingColumn=surname, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property surname with lazy=false
2020-05-22 11:45:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Author:surname]
2020-05-22 11:45:30 DEBUG SimpleValueBinder:411 - building SimpleValue for surname
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property surname
2020-05-22 11:45:30 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Genre
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:45:30 DEBUG EntityBinder:430 - Import with entity name Genre
2020-05-22 11:45:30 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Genre on table genre
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:45:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:id]
2020-05-22 11:45:30 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:45:30 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(genre), mappingColumn=name, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2020-05-22 11:45:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Genre:name]
2020-05-22 11:45:30 DEBUG SimpleValueBinder:411 - building SimpleValue for name
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property name
2020-05-22 11:45:30 DEBUG AnnotationBinder:557 - Binding entity from annotated class: dev.hibernate.model.Book
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2020-05-22 11:45:30 DEBUG EntityBinder:430 - Import with entity name Book
2020-05-22 11:45:30 DEBUG EntityBinder:873 - Bind entity dev.hibernate.model.Book on table book
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=id, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2020-05-22 11:45:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:id]
2020-05-22 11:45:30 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property id
2020-05-22 11:45:30 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=null, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=element, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=authors_KEY, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='authors_KEY', referencedColumn='null', mappedBy='null'}
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:45:30 DEBUG CollectionBinder:450 - Collection role: dev.hibernate.model.Book.authors
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property authors
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=genre, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property genre
2020-05-22 11:45:30 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(book), mappingColumn=title, insertable=true, updatable=true, unique=false}
2020-05-22 11:45:30 DEBUG PropertyBinder:175 - MetadataSourceProcessor property title with lazy=false
2020-05-22 11:45:30 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [dev.hibernate.model.Book:title]
2020-05-22 11:45:30 DEBUG SimpleValueBinder:411 - building SimpleValue for title
2020-05-22 11:45:30 DEBUG PropertyBinder:266 - Building property title
2020-05-22 11:45:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:45:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:45:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for surname
2020-05-22 11:45:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:45:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for name
2020-05-22 11:45:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2020-05-22 11:45:30 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for title
2020-05-22 11:45:30 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [author]
2020-05-22 11:45:30 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [genre]
2020-05-22 11:45:30 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [book]
2020-05-22 11:45:30 DEBUG CollectionSecondPass:50 - Second pass for collection: dev.hibernate.model.Book.authors
2020-05-22 11:45:30 DEBUG CollectionBinder:1319 - Binding as ManyToMany: dev.hibernate.model.Book.authors
2020-05-22 11:45:30 DEBUG CollectionSecondPass:67 - Mapped collection key: Book_id, element: authors_id
2020-05-22 11:45:30 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:45:30 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:45:30 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:45:30 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Genre
2020-05-22 11:45:30 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Author
2020-05-22 11:45:30 DEBUG InFlightMetadataCollectorImpl:1860 - Resolving reference to class: dev.hibernate.model.Book
2020-05-22 11:45:30 DEBUG SessionFactoryImpl:207 - Building session factory
2020-05-22 11:45:30 DEBUG Settings:68 - SessionFactory name : null
2020-05-22 11:45:30 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2020-05-22 11:45:30 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2020-05-22 11:45:30 DEBUG Settings:72 - Statistics: disabled
2020-05-22 11:45:30 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2020-05-22 11:45:30 DEBUG Settings:75 - Default entity-mode: pojo
2020-05-22 11:45:30 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2020-05-22 11:45:30 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2020-05-22 11:45:30 DEBUG Settings:80 - Default batch fetch size: -1
2020-05-22 11:45:30 DEBUG Settings:81 - Maximum outer join fetch depth: 2
2020-05-22 11:45:30 DEBUG Settings:82 - Default null ordering: NONE
2020-05-22 11:45:30 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2020-05-22 11:45:30 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2020-05-22 11:45:30 DEBUG Settings:86 - multi-tenancy strategy : NONE
2020-05-22 11:45:30 DEBUG Settings:88 - JTA Track by Thread: enabled
2020-05-22 11:45:30 DEBUG Settings:90 - Query language substitutions: {}
2020-05-22 11:45:30 DEBUG Settings:91 - Named query checking : enabled
2020-05-22 11:45:30 DEBUG Settings:93 - Second-level cache: disabled
2020-05-22 11:45:30 DEBUG Settings:94 - Second-level query cache: disabled
2020-05-22 11:45:30 DEBUG Settings:95 - Second-level query cache factory: null
2020-05-22 11:45:30 DEBUG Settings:96 - Second-level cache region prefix: null
2020-05-22 11:45:30 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2020-05-22 11:45:30 DEBUG Settings:98 - Structured second-level cache entries: disabled
2020-05-22 11:45:30 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2020-05-22 11:45:30 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2020-05-22 11:45:30 DEBUG Settings:102 - JDBC batch size: 15
2020-05-22 11:45:30 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2020-05-22 11:45:30 DEBUG Settings:104 - Scrollable result sets: enabled
2020-05-22 11:45:30 DEBUG Settings:105 - Wrap result sets: disabled
2020-05-22 11:45:30 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2020-05-22 11:45:30 DEBUG Settings:107 - JDBC result set fetch size: null
2020-05-22 11:45:30 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2020-05-22 11:45:30 DEBUG Settings:109 - Generate SQL with comments: disabled
2020-05-22 11:45:30 DEBUG Settings:111 - JPA compliance - query : 
2020-05-22 11:45:30 DEBUG Settings:112 - JPA compliance - closed-handling : 
2020-05-22 11:45:30 DEBUG Settings:113 - JPA compliance - lists : 
2020-05-22 11:45:30 DEBUG Settings:114 - JPA compliance - transactions : 
2020-05-22 11:45:30 DEBUG SessionFactoryImpl:262 - Session factory constructed with filter configurations : {}
2020-05-22 11:45:30 DEBUG SessionFactoryImpl:263 - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=/home/vladyslav/IdeaProjects/hibernate-practice/target/classes:/home/vladyslav/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-core/5.4.5.Final/hibernate-core-5.4.5.Final.jar:/home/vladyslav/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/vladyslav/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/vladyslav/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/vladyslav/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/vladyslav/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/vladyslav/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/vladyslav/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/vladyslav/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/vladyslav/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/vladyslav/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/vladyslav/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/vladyslav/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/vladyslav/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/vladyslav/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/vladyslav/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/vladyslav/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/vladyslav/.m2/repository/org/hibernate/hibernate-java8/5.4.5.Final/hibernate-java8-5.4.5.Final.jar:/home/vladyslav/.m2/repository/mysql/mysql-connector-java/8.0.17/mysql-connector-java-8.0.17.jar:/home/vladyslav/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=Europe/Moscow, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=dev.hibernate.Main, jdk.debug=release, sun.cpu.endian=little, user.home=/home/vladyslav, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-04-14, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, user.name=vladyslav, path.separator=:, hibernate.connection.username=****, os.version=5.3.0-51-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/hibernate?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.7, user.dir=/home/vladyslav/IdeaProjects/hibernate-practice, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@36fcf6c0, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.7+10-post-Ubuntu-2ubuntu218.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=55.0}
2020-05-22 11:45:30 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2020-05-22 11:45:30 DEBUG SessionFactoryImpl:302 - Instantiated session factory
2020-05-22 11:45:30 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3eb631b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5ec46cdd]
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Genre] is safe
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Genre
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Author] is safe
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Author
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [dev.hibernate.model.Book] is safe
2020-05-22 11:45:30 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : dev.hibernate.model.Book
2020-05-22 11:45:30 DEBUG AbstractCollectionPersister:689 - Static SQL for collection: dev.hibernate.model.Book.authors
2020-05-22 11:45:30 DEBUG AbstractCollectionPersister:691 -  Row insert: insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:45:30 DEBUG AbstractCollectionPersister:694 -  Row update: update book_author set authors_id=? where Book_id=? and authors_id=?
2020-05-22 11:45:30 DEBUG AbstractCollectionPersister:697 -  Row delete: delete from book_author where Book_id=? and authors_id=?
2020-05-22 11:45:30 DEBUG AbstractCollectionPersister:700 -  One-shot delete: delete from book_author where Book_id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Genre
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3823 -  Version select: select id from genre where id =?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select genre_.id, genre_.name as name2_3_ from genre genre_ where genre_.id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into genre (name, id) values (?, ?)
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Update 0: update genre set name=? where id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from genre where id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into genre (name) values (?)
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b66322e]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:45:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:45:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:45:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:45:30 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [NONE]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b81616b]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:45:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:45:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:45:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Genre)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:0>, path=dev.hibernate.model.Genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Genre)
          - SQL table alias mapping - genre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2020-05-22 11:45:30 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Genre [READ]: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:45:30 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:45:30 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Genre: select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Author
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3823 -  Version select: select id from author where id =?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select author_.id, author_.name as name2_0_, author_.surname as surname3_0_ from author author_ where author_.id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into author (name, surname, id) values (?, ?, ?)
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Update 0: update author set name=?, surname=? where id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from author where id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into author (name, surname) values (?, ?)
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49f40c00]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:45:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:45:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:45:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:45:30 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d6d273]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:45:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:45:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:45:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Author)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Author, querySpaceUid=<gen:0>, path=dev.hibernate.model.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2020-05-22 11:45:30 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:45:30 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:45:30 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.surname as surname3_0_0_ from author author0_ where author0_.id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3818 - Static SQL for entity: dev.hibernate.model.Book
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3823 -  Version select: select id from book where id =?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3826 -  Snapshot select: select book_.id, book_.genre_id as genre_id3_1_, book_.title as title2_1_ from book book_ where book_.id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into book (genre_id, title, id) values (?, ?, ?)
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Update 0: update book set genre_id=?, title=? where id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from book where id=?
2020-05-22 11:45:30 DEBUG AbstractEntityPersister:3834 -  Identity insert: insert into book (genre_id, title) values (?, ?)
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f9a4401]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@204abeff]
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43bf5397]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36aa52d2]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:45:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:45:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:45:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:45:30 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [NONE]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73ae0257]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5762658b]
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2629d5dc]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.name
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : authors.surname
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa3bfc]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : genre.name
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : title
2020-05-22 11:45:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:45:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:45:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=dev.hibernate.model.Book)
    - Returns
       - EntityReturnImpl(entity=dev.hibernate.model.Book, querySpaceUid=<gen:0>, path=dev.hibernate.model.Book)
          - CollectionAttributeFetchImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:1>, path=dev.hibernate.model.Book.authors)
             - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:2>, path=dev.hibernate.model.Book.authors.<elements>)
          - EntityAttributeFetchImpl(entity=dev.hibernate.model.Genre, querySpaceUid=<gen:3>, path=dev.hibernate.model.Book.genre)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=dev.hibernate.model.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(authors)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=dev.hibernate.model.Book.authors)
                - SQL table alias mapping - authors1_
                - alias suffix - 1_
                - suffixed key columns - {Book_id1_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=dev.hibernate.model.Author)
                      - SQL table alias mapping - author2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
          - JOIN (JoinDefinedByMetadata(genre)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=dev.hibernate.model.Genre)
                - SQL table alias mapping - genre3_
                - alias suffix - 3_
                - suffixed key columns - {id1_3_3_}

2020-05-22 11:45:30 DEBUG EntityLoader:137 - Static select for entity dev.hibernate.model.Book [READ]: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_, authors1_.Book_id as Book_id1_2_1_, author2_.id as authors_2_2_1_, author2_.id as id1_0_2_, author2_.name as name2_0_2_, author2_.surname as surname3_0_2_, genre3_.id as id1_3_3_, genre3_.name as name2_3_3_ from book book0_ left outer join book_author authors1_ on book0_.id=authors1_.Book_id left outer join author author2_ on authors1_.authors_id=author2_.id left outer join genre genre3_ on book0_.genre_id=genre3_.id where book0_.id=?
2020-05-22 11:45:30 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:45:30 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity dev.hibernate.model.Book: select book0_.id as id1_1_0_, book0_.genre_id as genre_id3_1_0_, book0_.title as title2_1_0_ from book book0_ where book0_.id=?
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5740ff5e]
2020-05-22 11:45:30 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a901445]
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2020-05-22 11:45:30 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : surname
2020-05-22 11:45:30 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2020-05-22 11:45:30 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2020-05-22 11:45:30 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=dev.hibernate.model.Book.authors)
    - Returns
       - CollectionReturnImpl(collection=dev.hibernate.model.Book.authors, querySpaceUid=<gen:0>, path=[dev.hibernate.model.Book.authors])
          - (collection element) CollectionFetchableElementEntityGraph(entity=dev.hibernate.model.Author, querySpaceUid=<gen:1>, path=[dev.hibernate.model.Book.authors].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=dev.hibernate.model.Book.authors)
          - SQL table alias mapping - authors0_
          - alias suffix - 0_
          - suffixed key columns - {Book_id1_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=dev.hibernate.model.Author)
                - SQL table alias mapping - author1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2020-05-22 11:45:30 DEBUG CollectionLoader:83 - Static select for collection dev.hibernate.model.Book.authors: select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:45:31 DEBUG SQL:127 - drop table if exists author
2020-05-22 11:45:31 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@350ec690] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:45:31 DEBUG SQL:127 - drop table if exists book
2020-05-22 11:45:31 DEBUG SQL:127 - drop table if exists book_author
2020-05-22 11:45:31 DEBUG SQL:127 - drop table if exists genre
2020-05-22 11:45:31 DEBUG SQL:127 - create table author (id bigint not null auto_increment, name varchar(255), surname varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:45:31 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6bee793f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2020-05-22 11:45:31 DEBUG SQL:127 - create table book (id bigint not null auto_increment, title varchar(255), genre_id bigint, primary key (id)) engine=MyISAM
2020-05-22 11:45:31 DEBUG SQL:127 - create table book_author (Book_id bigint not null, authors_id bigint not null) engine=MyISAM
2020-05-22 11:45:31 DEBUG SQL:127 - create table genre (id bigint not null auto_increment, name varchar(255), primary key (id)) engine=MyISAM
2020-05-22 11:45:31 DEBUG SQL:127 - alter table book add constraint FKm1t3yvw5i7olwdf32cwuul7ta foreign key (genre_id) references genre (id)
2020-05-22 11:45:31 DEBUG SQL:127 - alter table book_author add constraint FKee8x5xlovy8tlylr5ag6yruxd foreign key (authors_id) references author (id)
2020-05-22 11:45:32 DEBUG SQL:127 - alter table book_author add constraint FKgg2s332s7xxxtx3go41roc3pj foreign key (Book_id) references book (id)
2020-05-22 11:45:32 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2020-05-22 11:45:32 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2020-05-22 11:45:32 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:45:32 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-05-22 11:45:32 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2020-05-22 11:45:32 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2020-05-22 11:45:32 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3c66b7d8
2020-05-22 11:45:32 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1f4e0bc3-2513-4637-a593-46d456ccba94 (<unnamed>)
2020-05-22 11:45:32 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2020-05-22 11:45:32 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2020-05-22 11:45:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:45:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:45:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:45:32 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:45:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:45:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:45:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:45:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:45:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Shevchenko, name=Taras, id=1}
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:45:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:45:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:45:32 DEBUG SQL:127 - insert into author (name, surname) values (?, ?)
2020-05-22 11:45:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:45:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:45:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:45:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:45:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Author{surname=Kostenko, name=Lina, id=2}
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:45:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:45:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:45:32 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:45:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:45:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:45:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:45:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:45:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=drama, id=1}
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:45:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:45:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:45:32 DEBUG SQL:127 - insert into genre (name) values (?)
2020-05-22 11:45:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:45:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:45:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2020-05-22 11:45:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:45:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Genre{name=poem, id=2}
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:45:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:45:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:45:32 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:45:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 1
2020-05-22 11:45:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:45:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:45:32 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#1], was: [<unreferenced>] (initialized)
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:45:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:45:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=1, title=Kobzar, authors=[dev.hibernate.model.Author#1]}
2020-05-22 11:45:32 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:45:32 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 1 rows inserted
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:45:32 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2020-05-22 11:45:32 DEBUG TransactionImpl:81 - begin
2020-05-22 11:45:32 DEBUG ActionQueue:281 - Executing identity-insert immediately
2020-05-22 11:45:32 DEBUG SQL:127 - insert into book (genre_id, title) values (?, ?)
2020-05-22 11:45:32 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 2
2020-05-22 11:45:32 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2020-05-22 11:45:32 DEBUG TransactionImpl:98 - committing
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:140 - Processing flush-time cascades
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2020-05-22 11:45:32 DEBUG Collections:196 - Collection found: [dev.hibernate.model.Book.authors#2], was: [<unreferenced>] (initialized)
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:114 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2020-05-22 11:45:32 DEBUG AbstractFlushingEventListener:121 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2020-05-22 11:45:32 DEBUG EntityPrinter:110 - Listing entities:
2020-05-22 11:45:32 DEBUG EntityPrinter:117 - dev.hibernate.model.Book{genre=dev.hibernate.model.Genre#2, id=2, title=Some, authors=[dev.hibernate.model.Author#1, dev.hibernate.model.Author#2]}
2020-05-22 11:45:32 DEBUG AbstractCollectionPersister:1296 - Inserting collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:45:32 DEBUG SQL:127 - insert into book_author (Book_id, authors_id) values (?, ?)
2020-05-22 11:45:32 DEBUG AbstractCollectionPersister:384 - Done inserting collection: 2 rows inserted
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG JdbcCoordinatorImpl:170 - HHH000420: Closing un-released batch
2020-05-22 11:45:32 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:45:32 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7ba93755
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'title'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:45:32 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:45:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:45:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:45:32 DEBUG DotNode:698 - getDataType() : title -> org.hibernate.type.StringType@6399551e
2020-05-22 11:45:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.title -> book0_.title
2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:45:32 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.title book0_.id title ) ? ) ) )
2020-05-22 11:45:32 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.title
          | originalPropertyName: title
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: title
          \-ParameterNode

2020-05-22 11:45:32 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.title' {propertyName=title,dereferenceType=PRIMITIVE,getPropertyPath=title,path=generatedAlias0.title,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'title' {originalText=title}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6399551e}

2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.title=:param0
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.title=?
2020-05-22 11:45:32 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:45:32 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:45:32 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:45:32 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[COLON] Node: ':'
          |  \-[IDENT] Node: 'param0'
          \-[IN_LIST] Node: 'inList'
             \-[ELEMENTS] Node: 'elements'
                \-[DOT] Node: '.'
                   +-[IDENT] Node: 'generatedAlias0'
                   \-[IDENT] Node: 'authors'

2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:45:32 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:45:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:45:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:45:32 DEBUG DotNode:698 - getDataType() : authors -> org.hibernate.type.BagType(dev.hibernate.model.Book.authors)
2020-05-22 11:45:32 DEBUG FromElementFactory:404 - createManyToMany() : path = generatedAlias0.authors role = dev.hibernate.model.Book.authors associatedEntityName = dev.hibernate.model.Author
2020-05-22 11:45:32 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Author (<no alias>) -> authors1_
2020-05-22 11:45:32 DEBUG FromClause:287 - addJoinByPathMap() : generatedAlias0.authors -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
2020-05-22 11:45:32 DEBUG DotNode:351 - dereferenceCollection() : Created new FROM element for generatedAlias0.authors : book_author authors1_
2020-05-22 11:45:32 DEBUG MethodNode:196 - Creating elements for generatedAlias0.authors[].elements
2020-05-22 11:45:32 DEBUG FromElementType:652 - toColumns(authors1_,elements) : subquery = select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id
2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:45:32 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_  ) ( where ( in ? ( inList ( select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id ( . book0_.id authors ) ) ) ) ) )
2020-05-22 11:45:32 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  +-FromElement
    |  \-ImpliedFromElement
    \-SqlNode
       \-InLogicOperatorNode
          +-ParameterNode
          \-SqlNode
             \-CollectionFunction
                \-DotNode
                  persister: SingleTableEntityPersister(dev.hibernate.model.Author)
                  referencedTables: [book]
                  path: generatedAlias0.authors
                  originalPropertyName: authors
                   +-IdentNode
                   | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
                   | referencedTables: null
                   | originalText: generatedAlias0
                   \-IdentNode
                     persister: null
                     referencedTables: null
                     originalText: authors

2020-05-22 11:45:32 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (author,book,book_author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[authors1_, book0_], fromElementsByPath=[generatedAlias0.authors], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=dev.hibernate.model.Book.authors,tableName=author,tableAlias=authors1_,origin=book book0_,columns={book0_.id,className=dev.hibernate.model.Author}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Author)}
          \-[IN_LIST] SqlNode: 'inList'
             \-[SQL_TOKEN] CollectionFunction: 'select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id' {method=elements,selectColumns=[select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id],fromElement=authors1_}
                \-[DOT] DotNode: '.' {propertyName=authors,dereferenceType=COLLECTION,getPropertyPath=authors,path=generatedAlias0.authors,tableAlias=authors1_,className=dev.hibernate.model.Author,classAlias=null}
                   +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
                   \-[IDENT] IdentNode: 'authors' {originalText=authors}

2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where :param0 member of generatedAlias0.authors
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where ? in (select authors1_.authors_id from book_author authors1_ where book0_.id=authors1_.Book_id)
2020-05-22 11:45:32 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:45:32 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:45:32 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:45:32 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Some
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#2]
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:45:32 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Lina
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Kostenko
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#2]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:45:32 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
2020-05-22 11:45:32 DEBUG CriteriaQueryImpl:299 - Rendered criteria query -> select generatedAlias0 from Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'dev'
    |  |     |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Book'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'genre'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2020-05-22 11:45:32 DEBUG FromElement:147 - FromClause{level=1} : dev.hibernate.model.Book (generatedAlias0) -> book0_
2020-05-22 11:45:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:45:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> book0_.id
2020-05-22 11:45:32 DEBUG DotNode:698 - getDataType() : genre -> org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)
2020-05-22 11:45:32 DEBUG DotNode:656 - dereferenceShortcut() : property genre in dev.hibernate.model.Book does not require a join.
2020-05-22 11:45:32 DEBUG DotNode:685 - Terminal getPropertyPath = [genre]
2020-05-22 11:45:32 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.genre -> book0_.genre_id
2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2020-05-22 11:45:32 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} book0_.id ) ( FromClause{level=1} book book0_ ) ( where ( = ( book0_.genre_id book0_.id genre ) ? ) ) )
2020-05-22 11:45:32 DEBUG JoinProcessor:144 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Book): [book]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          | referencedTables: [book]
          | path: generatedAlias0.genre
          | originalPropertyName: genre
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(dev.hibernate.model.Book)
          |  | referencedTables: null
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    referencedTables: null
          |    originalText: genre
          \-ParameterNode

2020-05-22 11:45:32 DEBUG JoinProcessor:279 - Using FROM fragment [book book0_]
2020-05-22 11:45:32 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (book)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'book0_.id as id1_1_' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
    |  \-[SQL_TOKEN] SqlFragment: 'book0_.genre_id as genre_id3_1_, book0_.title as title2_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[book0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'book book0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=book,tableAlias=book0_,origin=null,columns={,className=dev.hibernate.model.Book}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'book0_.genre_id' {propertyName=genre,dereferenceType=UNKNOWN,getPropertyPath=genre,path=generatedAlias0.genre,tableAlias=book0_,className=dev.hibernate.model.Book,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'book0_.id' {alias=generatedAlias0, className=dev.hibernate.model.Book, tableAlias=book0_}
          |  \-[IDENT] IdentNode: 'genre' {originalText=genre}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(dev.hibernate.model.Genre)}

2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:254 - HQL: select generatedAlias0 from dev.hibernate.model.Book as generatedAlias0 where generatedAlias0.genre=:param0
2020-05-22 11:45:32 DEBUG QueryTranslatorImpl:255 - SQL: select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:45:32 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2020-05-22 11:45:32 DEBUG SQL:127 - select book0_.id as id1_1_, book0_.genre_id as genre_id3_1_, book0_.title as title2_1_ from book book0_ where book0_.genre_id=?
2020-05-22 11:45:32 DEBUG Loader:384 - Result set row: 0
2020-05-22 11:45:32 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG Loader:384 - Result set row: 1
2020-05-22 11:45:32 DEBUG Loader:1586 - Result row: EntityKey[dev.hibernate.model.Book#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG SQL:127 - select genre0_.id as id1_3_0_, genre0_.name as name2_3_0_ from genre genre0_ where genre0_.id=?
2020-05-22 11:45:32 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Genre#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = poem
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Genre#2]
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedEntityLoader:219 - Done entity load : dev.hibernate.model.Genre#2
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Kobzar
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Book#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `authors` : value = NOT NULL COLLECTION
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`authors`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `genre` : value = 2
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`genre`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `title` : value = Some
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`title`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Book#2]
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:45:32 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Taras
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Shevchenko
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#1]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:178 - Resolving attributes for [dev.hibernate.model.Author#2]
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `name` : value = Lina
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`name`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:190 - Processing attribute `surname` : value = Kostenko
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:221 - Attribute (`surname`)  - enhanced for lazy-loading? - false
2020-05-22 11:45:32 DEBUG TwoPhaseLoad:342 - Done materializing entity [dev.hibernate.model.Author#2]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#2]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG SQL:127 - select authors0_.Book_id as Book_id1_2_0_, authors0_.authors_id as authors_2_2_0_, author1_.id as id1_0_1_, author1_.name as name2_0_1_, author1_.surname as surname3_0_1_ from book_author authors0_ inner join author author1_ on authors0_.authors_id=author1_.id where authors0_.Book_id=?
2020-05-22 11:45:32 DEBUG ResultSetProcessorImpl:171 - Preparing collection initializer : [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG CollectionLoadContext:303 - Collection fully initialized: [dev.hibernate.model.Book.authors#1]
2020-05-22 11:45:32 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: dev.hibernate.model.Book.authors
2020-05-22 11:45:32 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2020-05-22 11:45:32 DEBUG LogicalConnectionManagedImpl:159 - Initiating JDBC connection release from afterTransaction
